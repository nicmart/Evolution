
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTU4NjY0OTU2MDA5MTk0NDIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKGNvbnN0YW50KHRha2UoMjAsIGludGVncmF0ZShwb2ludCgtMTAwMCwgMCksIG1hcChwb2xhcih1bmlmb3JtKDAsIDEwKSwgdW5pZm9ybSgwLCA2LjI4KSksIHAgLT4gYWRkKCRwLCBwb2ludCgxMDAsIDApKSkpKSksIHggLT4gJHgpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODE5OTIwNjYwODI0Nzg0ODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImNhcnRlc2lhbihpbnRlZ3JhdGUoMCwgY29uc3RhbnQoMTApKSwgc29sdmUxKGNvbnN0YW50KHggLT4gbXVsdGlwbHkoMC4wNCwgJHgpKSwgMSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEwLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODE5OTIwNjYwODI0Nzg0ODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImNhcnRlc2lhbihpbnRlZ3JhdGUoMCwgY29uc3RhbnQoMC4xKSksIHNvbHZlMShtYXAodW5pZm9ybSgtMiwgMiksIHIgLT4geCAtPiBhZGQobXVsdGlwbHkoMiwgJHIpLCBtdWx0aXBseSgwLjAwMSwgaW52ZXJzZSgkeCkpKSksIDEpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOnRydWUsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODE5OTIwNjYwODI0Nzg0ODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImNhcnRlc2lhbihpbnRlZ3JhdGUoLTUwMCwgY29uc3RhbnQoMykpLCBzb2x2ZTEoY29uc3RhbnQoeCAtPiBtdWx0aXBseSg1LCBzaW4obXVsdGlwbHkoMC4wMSwgJHgpKSkpLCAxKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODE5OTIwNjYwODI0Nzg0ODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImZsYXRNYXAodW5pZm9ybSgtMTAwMCwgMTAwMCksIHIgLT4gdGFrZSgzMDAwLCBjYXJ0ZXNpYW4oaW50ZWdyYXRlKC0xMDAwLCBjb25zdGFudCgxKSksIHNvbHZlMShjb25zdGFudCh4IC0+IG11bHRpcGx5KDAuNSwgc2luKG11bHRpcGx5KDAuMDEsICR4KSkpKSwgJHIpKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODE5OTIwNjYwODI0Nzg0ODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImZsYXRNYXAoXG4gIHVuaWZvcm0oLTEsIDEpLFxuICByIC0+IHRha2UoXG4gICAgMzAwMCxcbiAgICBAcG9pbnQoXG4gICAgICBpbnRlZ3JhdGUoLTEwMDAsIEAoMSkpLFxuICAgICAgc29sdmUxKFxuICAgICAgICBAKHggLT4gbXVsdGlwbHkoMSwgc2luKG11bHRpcGx5KDAuMDEsIHgpKSkpLFxuICAgICAgICByXG4gICAgICApXG4gICAgKVxuICApXG4pXG5cbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQyNTYxMTE5NTM5NjUwMTk2MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcblxuZmxhdE1hcChcbiAgaW50ZWdyYXRlKGJvdHRvbSwgQCgxMCkpLFxuICByIC0+IHRha2UoXG4gICAgMzAwMCxcbiAgICBAcG9pbnQoXG4gICAgICBpbnRlZ3JhdGUobGVmdCwgQCgxKSksXG4gICAgICBzb2x2ZTEoXG4gICAgICAgIEAoeCAtPiBzaW4obXVsdGlwbHkoMC4wMSwgeCkpKSxcbiAgICAgICAgclxuICAgICAgKVxuICAgIClcbiAgKVxuKVxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzM5NzI4MjMwODAxNDg4MzM1MSwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChsLCAwLjIsIGxldChmLCAwLjAxLCBzb2x2ZTIobWFwKHBvaW50KHVuaWZvcm0oLSRsLCAkbCksIHVuaWZvcm0oLSRsLCAkbCkpLCByIC0+IHggLT4gdiAtPiBhZGQoJHIsIG11bHRpcGx5KC0kZiwgJHYpKSksIHBvaW50KDAsIDApLCBwb2ludCgwLCAwKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTcxNTgxNDkyNzIyNTM1NjU5NzgsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKGNvbnN0YW50KHRha2UoMjAwLCBzb2x2ZTIobWFwKHBvaW50KHVuaWZvcm0oLTAuMiwgMC4yKSwgdW5pZm9ybSgtMC4yLCAwLjIpKSwgciAtPiB4IC0+IHYgLT4gYWRkKCRyLCBtdWx0aXBseSgtMC4wMDEsICR2KSkpLCBwb2ludCgwLCAwKSwgcG9pbnQoMCwgMCkpKSksIHggLT4gJHgpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDEwMjE3Nzc3NDkzNjMxMjMwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImZsYXRNYXAoY29uc3RhbnQodGFrZSgyMDAsIHNvbHZlMihtYXAocG9pbnQodW5pZm9ybSgtMC44LCAwLjEpLCB1bmlmb3JtKC0wLjgsIDAuNSkpLCByIC0+IHggLT4gdiAtPiBhZGQoJHIsIG11bHRpcGx5KC0wLjAxLCAkdikpKSwgcG9pbnQoMCwgMCksIHBvaW50KDAsIDApKSkpLCB4IC0+ICR4KSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgwODU1ODE4ODgwNjE1OTkwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImZsYXRNYXAodW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgeCAtPiB0YWtlKDMwLCBmbGF0TWFwKHVuaWZvcm0oJGJvdHRvbSwgJHRvcCksIHkgLT4gcG9pbnQoaW50ZWdyYXRlKCR4LCBjb25zdGFudCgxKSksIHNvbHZlMShjb25zdGFudCh6IC0+IG11bHRpcGx5KDAuMDAwMDEsIG11bHRpcGx5KCR6LCBhZGQoMSwgLSR6KSkpKSwgJHkpKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODM5MDkxMDkwOTkwMDQ2MDAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImwgPSAxMCBpblxuaFNwZWVkID0gMiBpblxudyA9IDAuMDEgaW5cbmFtcGxpdHVkZSA9IDEwIGluXG5cbnJuZFBvaW50ID1jYXJ0ZXNpYW4odW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgdW5pZm9ybSgkYm90dG9tLCAkdG9wKSkgaW5cblxudHJhamVjdG9yeSA9IHAgLT4gY2FydGVzaWFuKFxuICBpbnRlZ3JhdGUoeCgkcCksIGNvbnN0YW50KCRoU3BlZWQpKSxcbiAgc29sdmUxKGNvbnN0YW50KHogLT4gJGFtcGxpdHVkZSAqIHNpbigkdyAqICR6KSksIHkoJHApKVxuKSBpbiBcblxuZmxhdE1hcChcbiAgJHJuZFBvaW50LFxuICBwIC0+IHRha2UoXG4gICAgJGwsXG4gICAgJHRyYWplY3RvcnkoJHApXG4gICkgXG4pIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgwODU1ODE4ODgwNjE1OTkwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImZsYXRNYXAodW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgeCAtPiB0YWtlKDEwLCBmbGF0TWFwKHVuaWZvcm0oJGJvdHRvbSwgJHRvcCksIHkgLT4gcG9pbnQoaW50ZWdyYXRlKCR4LCBjb25zdGFudCgxKSksIHNvbHZlMShjb25zdGFudCh6IC0+IG11bHRpcGx5KDMsIGFkZChzaW4obXVsdGlwbHkoMC4wMDMsICR6KSksIGFkZChzaW4obXVsdGlwbHkoMC4wNSwgJHopKSwgc2luKG11bHRpcGx5KDAuMDA2LCAkeikpKSkpKSwgJHkpKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKFxuICB1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLFxuICB4IC0+IHRha2UoXG4gICAgMTAwMDAsXG4gICAgZmxhdE1hcChcbiAgICAgIHVuaWZvcm0oJGJvdHRvbSwgJHRvcCksXG4gICAgICB5IC0+IG1hcChcbiAgICAgICAgY2FydGVzaWFuKFxuICAgICAgICAgIHNvbHZlMihtYXAodW5pZm9ybSgtMSwgMSksIHIgLT4geiAtPiB2IC0+IDAuMSAqICRyICsgMCAqICR6ICsgLTAuMSAqICR2KSwgMCwgMCksXG4gICAgICAgICAgc29sdmUyKG1hcCh1bmlmb3JtKC0xLCAxKSwgciAtPiB6IC0+IHYgLT4gMC4xICogJHIgKyAtMC4wMDEgKiAgJHogKyAtMC4wMDMgKiAkdiksIDAsIDApXG4gICAgICAgICksXG4gICAgICAgIHAgLT4gJHAgKyBwb2ludCgkeCwgJHkpXG4gICAgICApXG4gICAgKVxuICApXG4pIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQ5MzI5MTg3OTY4OTcwODIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHggLT4gdGFrZSgxMDAwMCwgZmxhdE1hcCh1bmlmb3JtKCRib3R0b20sICR0b3ApLCB5IC0+IG1hcChwb2ludChzb2x2ZTIobWFwKHVuaWZvcm0oLTEsIDEpLCByIC0+IHogLT4gdiAtPiBhZGQobXVsdGlwbHkoMC4xLCAkciksIGFkZChtdWx0aXBseSgwLCAkeiksIG11bHRpcGx5KC0wLjEsICR2KSkpKSwgMCwgMCksIHNvbHZlMihtYXAodW5pZm9ybSgtMSwgMSksIHIgLT4geiAtPiB2IC0+IGFkZChtdWx0aXBseSgwLjEsICRyKSwgYWRkKG11bHRpcGx5KC0wLjAwMSwgJHopLCBtdWx0aXBseSgtMC4wMDMsICR2KSkpKSwgMCwgMCkpLCBwIC0+IGFkZCgkcCwgcG9pbnQoJHgsICR5KSkpKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQ5MzI5MTg3OTY4OTcwODIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHggLT4gdGFrZSgxMDAwMCwgZmxhdE1hcCh1bmlmb3JtKCRib3R0b20sICR0b3ApLCB5IC0+IG1hcChwb2ludChzb2x2ZTIobWFwKHVuaWZvcm0oLTEsIDEpLCByIC0+IHogLT4gdiAtPiBhZGQobXVsdGlwbHkoMC4xLCAkciksIGFkZChtdWx0aXBseSgtMC4wMDEsICR6KSwgbXVsdGlwbHkoLTAuMDAzLCAkdikpKSksIDAsIDApLCBzb2x2ZTIobWFwKHVuaWZvcm0oLTEsIDEpLCByIC0+IHogLT4gdiAtPiBhZGQobXVsdGlwbHkoMC4xLCAkciksIGFkZChtdWx0aXBseSgtMC4wMDEsICR6KSwgbXVsdGlwbHkoLTAuMDAzLCAkdikpKSksIDAsIDApKSwgcCAtPiBhZGQoJHAsIHBvaW50KCR4LCAkeSkpKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQ5MzI5MTg3OTY4OTcwODIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHggLT4gdGFrZSgxMDAwMCwgZmxhdE1hcCh1bmlmb3JtKCRib3R0b20sICR0b3ApLCB5IC0+IG1hcChwb2ludChzb2x2ZTIobWFwKHVuaWZvcm0oLTEsIDEpLCByIC0+IHogLT4gdiAtPiBhZGQobXVsdGlwbHkoMC4xLCAkciksIGFkZChtdWx0aXBseSgtMC4wMDEsICR6KSwgbXVsdGlwbHkoLTAuMDMsICR2KSkpKSwgMCwgMCksIHNvbHZlMihtYXAodW5pZm9ybSgtMSwgMSksIHIgLT4geiAtPiB2IC0+IGFkZChtdWx0aXBseSgwLjEsICRyKSwgYWRkKG11bHRpcGx5KC0wLjAwMDEsICR6KSwgbXVsdGlwbHkoLTAuMDAwMywgJHYpKSkpLCAwLCAwKSksIHAgLT4gYWRkKCRwLCBwb2ludCgkeCwgJHkpKSkpKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjYyNTU3MjU0OTgyNzUyMzAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChyYWRpdXMsIDIsIGxldChmcmljdGlvbiwgMC4wNiwgc29sdmUyKG1hcChjYXJ0ZXNpYW4odW5pZm9ybSgtJHJhZGl1cywgJHJhZGl1cyksIHVuaWZvcm0oLSRyYWRpdXMsICRyYWRpdXMpKSwgciAtPiB4IC0+IHYgLT4gJHIgKyBtdWx0aXBseSgtJGZyaWN0aW9uLCAkdikpLCBwb2ludCgwLCAwKSwgcG9pbnQoMCwgMCkpKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MjEwMTg0MTk2NDY3NjAwNzMyNywiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChyYWRpdXMsIDAuMDAwMDEsIGxldCh2aXNjb3NpdHksIG11bHRpcGx5KCRyYWRpdXMsIDAuMDEpLCBsZXQoaywgbXVsdGlwbHkoJHJhZGl1cywgMyksIGxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKC0kcmFkaXVzLCAkcmFkaXVzKSwgdW5pZm9ybSgtJHJhZGl1cywgJHJhZGl1cykpLCBsZXQodiwgc29sdmUyKG1hcCgkcm5kLCByIC0+IHggLT4gdiAtPiAkciArIG11bHRpcGx5KC0kdmlzY29zaXR5LCAkdikgKyBtdWx0aXBseSgtJGssICR4KSksIHBvaW50KDAsIDApLCBwb2ludCgwLCAwKSksIGludGVncmF0ZShwb2ludCgwLCAwKSwgJHYpKSkpKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTU3ODM3Njc4MzEyODM1OTIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJsZXQocmFkaXVzLCAwLjAwMSxcbmxldCh2aXNjb3NpdHksICRyYWRpdXMgKiA5Ljk5NSxcbmxldChrLCAkcmFkaXVzICogMTAsXG5sZXQocm5kLCBjYXJ0ZXNpYW4odW5pZm9ybSgtJHJhZGl1cywgJHJhZGl1cyksIHVuaWZvcm0oLSRyYWRpdXMsICRyYWRpdXMpKSxcbmxldCh2LCBzb2x2ZTIobWFwKCRybmQsIHIgLT4geCAtPiB2IC0+ICRyICsgLSR2aXNjb3NpdHkgKiAkdiArIC0kayAqICR4KSwgcG9pbnQoMCwgMCksIHBvaW50KDAsIDApKSxcblxuaW50ZWdyYXRlKHBvaW50KDAsIDApLCAkdilcblxuXG4pKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MjMyMjU5NzUwOTkwMTMzMTUwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChjaXJjbGUsIHIgLT4gdyAtPiBwb2xhcihjb25zdGFudCgkciksIGludGVncmF0ZSgwLCBjb25zdGFudCgkdykpKSxcbmxldChybmRQb2ludCwgY2FydGVzaWFuKHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHVuaWZvcm0oJGJvdHRvbSwgJHRvcCkpLFxubGV0KHJhZGl1c2VzLCB1bmlmb3JtKDEsIDMwKSxcblxuZmxhdE1hcChcbiAgJHJuZFBvaW50LFxuICBwIC0+IHRha2UoMTAwLCBmbGF0TWFwKCRyYWRpdXNlcywgciAtPiBtYXAoJGNpcmNsZSgkciwgLjEpLCBwMiAtPiAkcCArICRwMikpKVxuKVxuXG4pKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTM2NTU4MTA0ODg0ODIxMjA3MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJsZXQoaywgLjAwMDMsXG5sZXQoaCwgLjAwMyxcbmxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSxcbmxldCh0cmFqZWN0b3J5LCBwIC0+IFxuXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHAgLT4gcG9pbnQoJGggKiB5KCRwKSwgLSRrICogeCgkeCkpKSxcbiAgJHBcbiksXG5cbmZsYXRNYXAoJHJuZCwgcCAtPiB0YWtlKDEwMCwgJHRyYWplY3RvcnkoJHApKSlcblxuKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjUzMjExNDYwMzY3MTA5NTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InIgPSAzIGluXG52ID0gY2FydGVzaWFuKHVuaWZvcm0oLSRyLCAkciksIHVuaWZvcm0oLSRyLCAkcikpIGluXG5cbnN5bW0gPSBlIC0+IGZsYXRNYXAoJGUsIHAgLT5cbiAgY29ucygkcCwgY29ucygtJHAsIGNvbnMocG9pbnQoLXgoJHApLCB5KCRwKSksIGNvbnMocG9pbnQoeCgkcCksIC15KCRwKSksIGVtcHR5KSkpKVxuKSBpblxuXG4kc3ltbShpbnRlZ3JhdGUocG9pbnQoMCwgMCksICR2KSlcbiAgIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzU2MjQ3MjYxMDYyNDMwODg3MywiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChzY2FsZSwgNTAwLFxubGV0KHNjYWxlSW52LCAuMDAyLFxubGV0KGEsIC0xLjQgKiAkc2NhbGVJbnYgLFxubGV0KGIsIDEuNiAqICRzY2FsZUludixcbmxldChjLCAxLjEsXG5sZXQoZCwgMC43ICxcbmxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSxcbmxldCh0cmFqZWN0b3J5LCBwIC0+IFxuXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHAgLT4gLSRwICsgJHNjYWxlICogcG9pbnQoXG4gICAgc2luKCRhICogeSgkcCkpICsgJGMgKiBjb3MoJGEgKiB4KCRwKSksXG4gICAgc2luKCRiICogeCgkcCkpICsgJGQgKiBjb3MoJGIgKiB5KCRwKSlcbiAgKSksXG4gICRwIFxuKSwgIFxuICAgXG4kdHJhamVjdG9yeShwb2ludCgwLCAwKSlcblxuKSkpKSkpKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzU2MjQ3MjYxMDYyNDMwODcwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChzY2FsZSwgLjAxLFxubGV0KHNjYWxlSW52LCAuMDAyLFxubGV0KGEsIC0xLjQgKiAkc2NhbGVJbnYgLFxubGV0KGIsIDEuNiAqICRzY2FsZUludixcbmxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSxcbmxldCh0cmFqZWN0b3J5LCBwIC0+IFxuICAgIFxuc29sdmUxKFxuICBjb25zdGFudChwIC0+ICRzY2FsZSAqIHBvaW50KFxuICAgIHkoJHApLFxuICAgICRhICogeCgkcCkgKiAoMSArLXgoJHApKVxuICApKSxcbiAgJHAgXG4pLCAgXG4gICBcbmZsYXRNYXAoJHJuZCwgcCAtPiB0YWtlKDEwMCwgJHRyYWplY3RvcnkoJHApKSlcblxuKSkpKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzU2MjQ3MjYxMDYyNDMwODcwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChzY2FsZSwgNTAwLFxubGV0KHNjYWxlSW52LCAuMDAyLFxubGV0KGEsIC0xLjQgKiAkc2NhbGVJbnYgLFxubGV0KGIsIDEuNiAqICRzY2FsZUludixcbmxldChjLCAxLjEsXG5sZXQoZCwgMC43ICxcbmxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSxcbmxldCh0cmFqZWN0b3J5LCBwIC0+IFxuXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHAgLT4gLSRwICsgJHNjYWxlICogcG9pbnQoXG4gICAgc2luKCRhICogeSgkcCkpICsgJGMgKiBjb3MoJGEgKiB4KCRwKSksXG4gICAgc2luKCRiICogeCgkcCkpICsgJGQgKiBjb3MoJGIgKiB5KCRwKSkgKyAuNTIyN1xuICApKSxcbiAgJHAgXG4pLCAgXG4gICBcbiR0cmFqZWN0b3J5KHBvaW50KDAsIDApKVxuXG4pKSkpKSkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzU2MjQ3MjYxMDYyNDMwODcwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChybmQsIGNhcnRlc2lhbih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSxcbmxldChrLCAxMDAwMDAwLFxubGV0KHRyYWplY3RvcnksIHAgLT4gXG4gICAgXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHAgLT4gcG9pbnQoXG4gICAgeCgkcCleMiArIC15KCRwKV4yLFxuICAgIDggKiB4KCRwKSAqIHkoJHApXG4gICkpLFxuICAoMSAvICRrKSAqICRwIFxuKSwgICBcbiAgIFxuZmxhdE1hcCgkcm5kLCBwIC0+IHRha2UoMTAwLCBtYXAoJHRyYWplY3RvcnkoJHApLCBxIC0+ICRrICogJHEgKSkpXG5cbikpKSAgIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTY4NzQ2ODg0MjIyMzE2NDQwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJsZXQocm5kLCByIC0+IG4gLT4gdGFrZSgkbiwgY2FydGVzaWFuKHVuaWZvcm0oLSRyLCAkciksIHVuaWZvcm0oLSRyLCAkcikpKSxcblxuaW50ZWdyYXRlKHBvaW50KDAsIDApLCBmbGF0TWFwKHVuaWZvcm1DaG9pY2UoJHJuZCgyLCAxMDAwKSwgJHJuZCgxMCwgMTAwKSksIHggLT4gJHgpKSBcbiBcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODM5MDkxMDkwOTkwMDQ2MDAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChwMSwgcG9pbnQoMCwgJHRvcCksXG5sZXQocDIsIHBvaW50KCRsZWZ0LCAkYm90dG9tKSxcbmxldChwMywgcG9pbnQoJHJpZ2h0LCAkYm90dG9tKSxcblxubGV0KHZlcnRleGVzLCB1bmlmb3JtQ2hvaWNlKCRwMSwgJHAyLCAkcDMpLFxuXG5zb2x2ZTEoXG4gIG1hcCgkdmVydGV4ZXMsIHYgLT4gcCAtPiAtJHAgKyAwLjUgKiAoJHYgKyAkcCkpLFxuICBwb2ludCgwLCAwKVxuKVxuXG4pKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDk0NTcyMjk5MjA4MzI2NDE3NCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChwMSwgcG9pbnQoMCwgJHRvcCksXG5sZXQocDIsIHBvaW50KCRsZWZ0LCAkYm90dG9tKSxcbmxldChwMywgcG9pbnQoJHJpZ2h0LCAkYm90dG9tKSxcblxubGV0KHJuZCwgY2FydGVzaWFuKHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHVuaWZvcm0oJGJvdHRvbSwgJHRvcCkpLFxubGV0KHZlcnRleGVzLCBtYXBDb25zKCRybmQsIHAxIC0+IHQxIC0+IG1hcENvbnMoJHQxLCBwMiAtPiB0MiAtPiBtYXBDb25zKCR0MiwgcDMgLT4gdDMgLT4gdW5pZm9ybUNob2ljZSgkcDEsICRwMiwgJHAzKSkpKSxcblxuc29sdmUxKFxuICBtYXAoJHZlcnRleGVzLCB2IC0+IHAgLT4gLSRwICsgMC41ICogKCR2ICsgJHApKSxcbiAgcG9pbnQoMCwgMClcbilcblxuKSkpKSkgIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NzI0ODY3OTY4OTk2ODE1MDczOCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChybmQsIHIgLT4gbiAtPiB0YWtlKCRuLCBjYXJ0ZXNpYW4odW5pZm9ybSgtJHIsICRyKSwgdW5pZm9ybSgtJHIsICRyKSkpLFxubGV0KGMsIHIgLT4gbiAtPiB0YWtlKCRuLCBmbGF0TWFwKGNhcnRlc2lhbih1bmlmb3JtKC0kciwgJHIpLCB1bmlmb3JtKC0kciwgJHIpKSwgcCAtPiBjb25zdGFudCgkcCkpKSxcblxuaW50ZWdyYXRlKFxuICBwb2ludCgwLCAwKSxcbiAgZmxhdE1hcChcbiAgICBmbGF0TWFwKGNvbnN0YW50KGNvbnMoJHJuZCgzLCA1MDApLCBjb25zKCRjKDMsIDMwKSwgZW1wdHkpKSksIHggLT4gJHgpLFxuICAgIHggLT4gJHhcbiAgKVxuKSBcbiBcbikpICAgIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODM5MDkxMDkwOTkwMDQ2MDAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChwMSwgcG9pbnQoJGxlZnQsICR0b3ApLFxubGV0KHAyLCBwb2ludCgkcmlnaHQsICR0b3ApLFxubGV0KHAzLCBwb2ludCgkcmlnaHQsICRib3R0b20pLFxubGV0KHA0LCBwb2ludCgkbGVmdCwgJGJvdHRvbSksXG5sZXQocm5kLCB0YWtlKDEsIGNhcnRlc2lhbih1bmlmb3JtKC0xMCwgMTApLCB1bmlmb3JtKC0xMCwgMTApKSksXG5sZXQodmVydGV4ZXMsIHVuaWZvcm1DaG9pY2UoJHA0LCAkcDEsICRwMyksXG5cbnNvbHZlMShcbiAgZmxhdE1hcChcbiAgICAkdmVydGV4ZXMsXG4gICAgdiAtPiBtYXAoJHJuZCwgIHIgLT4gcCAtPiAtJHAgKyAkciArLjUgKiAoJHYgKyAkcCkpXG4gICksXG4gICRwMVxuKVxuIFxuKSkpKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODM5MDkxMDkwOTkwMDQ2MDAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InNsaWRpbmcgPSBmaXgoc2VsZiAtPlxuICAgIHRzIC0+IGYgLT4gbWFwQ29ucygkdHMsXG4gICAgICB0MSAtPiB0YWlsMSAtPiBtYXBDb25zKCR0YWlsMSxcbiAgICAgICAgdDIgLT4gdGFpbDIgLT4gY29ucygkZigkdDEsICR0MiksICRzZWxmKCR0YWlsMSwgJGYpKVxuICAgICAgKVxuICAgIClcbikgaW5cblxubm9Db25zZWMgPSBwb2ludHMgLT4gZmxhdE1hcChcbiAgJHNsaWRpbmcoJHBvaW50cywgeDEgLT4geDIgLT4gaWYoZXEoJHgxLCAkeDIpLCAgZW1wdHksIGNvbnMoJHgxLCBlbXB0eSkpKSxcbiAgeCAtPiAkeFxuKSBpblxuXG54cyA9IHVuaWZvcm1DaG9pY2UocG9pbnQoMCwgMCksIHBvaW50KDEwMCwgMjAwKSwgcG9pbnQoLTEwMCwgLTEwMCkpIGluXG5cbiRub0NvbnNlYygkeHMpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEsInN0cm9rZVNpemUiOjMsInRyYWlsIjp7ImFjdGl2ZSI6dHJ1ZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTcyNjYyODM1ODQ3OTU1MTcwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImxldChcbiAgc2xpZGluZyxcbiAgZml4KHNlbGYgLT5cbiAgICB0cyAtPiBmIC0+IG1hcENvbnMoJHRzLFxuICAgICAgdDEgLT4gdGFpbDEgLT4gbWFwQ29ucygkdGFpbDEsXG4gICAgICAgIHQyIC0+IHRhaWwyIC0+IGNvbnMoJGYoJHQxLCAkdDIpLCAkc2VsZigkdGFpbDEsICRmKSlcbiAgICAgIClcbiAgICApXG4gICksXG5cbmxldChub0NvbnNlYywgcG9pbnRzIC0+IGZsYXRNYXAoJHNsaWRpbmcoJHBvaW50cywgeDEgLT4geDIgLT4gaWYoZXEoJHgxLCAkeDIpLCAgZW1wdHksIGNvbnMoJHgxLCBlbXB0eSkpKSwgeCAtPiAkeCksXG5cbmxldChwMSwgcG9pbnQoJGxlZnQsICR0b3ApLFxubGV0KHAyLCBwb2ludCgkbGVmdCwgJGJvdHRvbSksXG5sZXQocDMsIHBvaW50KCRyaWdodCwgJHRvcCksXG5sZXQocDQsIHBvaW50KCRyaWdodCwgJGJvdHRvbSksXG5cbmxldCh2ZXJ0ZXhlcywgJG5vQ29uc2VjKHVuaWZvcm1DaG9pY2UoJHAxLCAkcDIsICRwMywgJHA0KSksXG5sZXQoaywgLjA2LCBcbmxldChmLCB2IC0+IHAgLT4gLSRwICsgJGsgKiAkdiArICgtJGsgKyAxKSAqICRwLFxuc29sdmUxKFxuICBtYXAoJHZlcnRleGVzLCB2IC0+IHAgLT4gLSRwICsgJGYoJHYsICRwKSksXG4gIHBvaW50KDAsIDApXG4pXG4gXG4pKSkpKSkpKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODM5MDkxMDkwOTkwMDQ2MDAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InIgPSAyIGluXG5sID0gMTAwIGluXG5ncmlkU2l6ZSA9IDEwMCBpblxuXG5ybmRQb2ludCA9IGNhcnRlc2lhbih1bmlmb3JtRGlzY3JldGUoJGxlZnQsICRyaWdodCwgJGdyaWRTaXplKSwgdW5pZm9ybURpc2NyZXRlKCRib3R0b20sICR0b3AsICRncmlkU2l6ZSkpIGluXG5icm93bmlhbiA9IHAgLT4gdGFrZSgkbCxpbnRlZ3JhdGUoJHAsIGNhcnRlc2lhbih1bmlmb3JtKC0kciwgJHIpLCB1bmlmb3JtKC0kciwgJHIpKSkpIGluXG5cbmZsYXRNYXAoJHJuZFBvaW50LCAkYnJvd25pYW4pIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gMyBpblxubCA9IDEwMCBpblxuZ3JpZFNpemUgPSAxMDAgaW5cblxuc3ltbSA9IGUgLT4gZmxhdE1hcCgkZSwgcCAtPiBcbiAgY29ucygkcCwgY29ucygtJHAsIGNvbnMocG9pbnQoLXgoJHApLCB5KCRwKSksIGNvbnMocG9pbnQoeCgkcCksIC15KCRwKSksIGVtcHR5KSkpXG4pKSBpblxuXG50cmFuc2xhdGVkU3ltbSA9IHAgLT4gZSAtPiBtYXAoJHN5bW0obWFwKCRlLCB4IC0+IC0kcCArICR4KSksIHggLT4gJHAgKyAkeCkgaW5cblxucm5kUG9pbnQgPSBjYXJ0ZXNpYW4odW5pZm9ybURpc2NyZXRlKCRsZWZ0LCAkcmlnaHQsICRncmlkU2l6ZSksIHVuaWZvcm1EaXNjcmV0ZSgkYm90dG9tLCAkdG9wLCAkZ3JpZFNpemUpKSBpblxuYnJvd25pYW4gPSBwIC0+IHRha2UoJGwsIGludGVncmF0ZSgkcCwgY2FydGVzaWFuKHVuaWZvcm0oLSRyLCAkciksIHVuaWZvcm0oLSRyLCAkcikpKSkgaW5cblxuZmxhdE1hcCgkcm5kUG9pbnQsIHAgLT4gJHRyYW5zbGF0ZWRTeW1tKCRwLCAkYnJvd25pYW4oJHApKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gMyBpblxubCA9IDQwIGluXG5ncmlkU2l6ZSA9IDUwIGluXG5cbnN5bW0gPSBlIC0+IGZsYXRNYXAoJGUsIHAgLT4gXG4gIGNvbnMoJHAsIGNvbnMoLSRwLCBjb25zKHBvaW50KC14KCRwKSwgeSgkcCkpLCBjb25zKHBvaW50KHgoJHApLCAteSgkcCkpLCBlbXB0eSkpKVxuKSkgaW5cblxudHJhbnNsYXRlZFN5bW0gPSBwIC0+IGUgLT4gbWFwKCRzeW1tKG1hcCgkZSwgeCAtPiAtJHAgKyAkeCkpLCB4IC0+ICRwICsgJHgpIGluXG5cbnJuZFBvaW50ID0gY2FydGVzaWFuKHVuaWZvcm1EaXNjcmV0ZSgkbGVmdCwgJHJpZ2h0LCAkZ3JpZFNpemUpLCB1bmlmb3JtRGlzY3JldGUoJGJvdHRvbSwgJHRvcCwgJGdyaWRTaXplKSkgaW5cbmJyb3duaWFuID0gcCAtPiB0YWtlKCRsLCBpbnRlZ3JhdGUoJHAsIGNhcnRlc2lhbih1bmlmb3JtKC0kciwgJHIpLCB1bmlmb3JtKC0kciwgJHIpKSkpIGluXG5cbmZsYXRNYXAoJHJuZFBvaW50LCBwIC0+ICR0cmFuc2xhdGVkU3ltbSgkcCwgJGJyb3duaWFuKCRwKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQzNDYxNjgwMDk0NTAyODI2ODEsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDIwMCBpblxuciA9IDYgaW5cbnhzID0gdGFrZSgyMCwgaW50ZWdyYXRlKCRsZWZ0LCBjb25zdGFudCgkZ3JpZFNpemUpKSkgaW5cbnlzID0gdGFrZSgxMCwgaW50ZWdyYXRlKCRib3R0b20sIGNvbnN0YW50KCRncmlkU2l6ZSkpKSBpblxuXG5wb2ludHMgPSBmbGF0TWFwKCR4cywgeCAtPiBtYXAoJHlzLCB5IC0+IHBvaW50KCR4LCAkeSkpKSBpblxuXG5zeW1tID0gZSAtPiBmbGF0TWFwKCRlLCBwIC0+IFxuICBjb25zKCRwLCBjb25zKC0kcCwgY29ucyhwb2ludCgteCgkcCksIHkoJHApKSwgY29ucyhwb2ludCh4KCRwKSwgLXkoJHApKSwgZW1wdHkpKSlcbikpIGluXG5cbmJyb3duaWFuID0gJHN5bW0oaW50ZWdyYXRlKHBvaW50KDAsIDApLCBjYXJ0ZXNpYW4odW5pZm9ybSgtJHIsICRyKSwgdW5pZm9ybSgtJHIsICRyKSkpKSBpblxuXG5mbGF0TWFwKCRicm93bmlhbiwgcCAtPiBtYXAoJHBvaW50cywgcSAtPiAkcCArICRxKSlcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gMyBpblxuZ3JpZFNpemUgPSAxMDAgaW5cblxuc3ltbSA9IGUgLT4gZmxhdE1hcCgkZSwgcCAtPiBcbiAgY29ucygkcCwgY29ucygtJHAsIGNvbnMocG9pbnQoLXgoJHApLCB5KCRwKSksIGNvbnMocG9pbnQoeCgkcCksIC15KCRwKSksIGVtcHR5KSkpXG4pKSBpblxuXG5cblxudHJhbnNsYXRlZFN5bW0gPSBwIC0+IGUgLT4gbWFwKCRzeW1tKG1hcCgkZSwgeCAtPiAtJHAgKyAkeCkpLCB4IC0+ICRwICsgJHgpIGluXG5cbnJuZFBvaW50ID0gPHBvaW50Pih1bmlmb3JtRGlzY3JldGUoJGxlZnQsICRyaWdodCwgJGdyaWRTaXplKSwgdW5pZm9ybURpc2NyZXRlKCRib3R0b20sICR0b3AsICRncmlkU2l6ZSkpIGluXG5icm93bmlhbiA9IHAgLT4gdGFrZShmbG9vcig1MCAqKDEgKyBzaW4oLjA1ICogeCgkcCkpKSksIGludGVncmF0ZSgkcCwgPHBvaW50Pih1bmlmb3JtKC0kciwgJHIpLCB1bmlmb3JtKC0kciwgJHIpKSkpIGluXG5cbmZsYXRNYXAoJHJuZFBvaW50LCBwIC0+ICR0cmFuc2xhdGVkU3ltbSgkcCwgJGJyb3duaWFuKCRwKSkpICAgICJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJmbGF0TWFwKFxuICB1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLFxuICB4IC0+IHRha2UoXG4gICAgMTAwMDAsXG4gICAgZmxhdE1hcChcbiAgICAgIHVuaWZvcm0oJGJvdHRvbSwgJHRvcCksXG4gICAgICB5IC0+IG1hcChcbiAgICAgICAgY2FydGVzaWFuKFxuICAgICAgICAgIHNvbHZlMihtYXAodW5pZm9ybSgtMSwgMSksIHIgLT4geiAtPiB2IC0+IDAuMSAqICRyICsgMCAqICR6ICsgLTAuMSAqICR2KSwgMCwgMCksXG4gICAgICAgICAgc29sdmUyKG1hcCh1bmlmb3JtKC0xLCAxKSwgciAtPiB6IC0+IHYgLT4gMC4xICogJHIgKyAtMC4wMDEgKiAgJHogKyAtMC4wMDMgKiAkdiksIDAsIDApXG4gICAgICAgICksXG4gICAgICAgIHAgLT4gJHAgKyBwb2ludCgkeCwgJHkpXG4gICAgICApXG4gICAgKVxuICApXG4pIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTU0MzAyOTIwNTYxMDU0NjkzNTAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDEwMCBpblxuXG5zeW1tID0gZSAtPiBmbGF0TWFwKGUsIHAgLT4gXG4gIGNvbnMocCwgY29ucygtcCwgY29ucyhwb2ludCgteChwKSwgeShwKSksIGNvbnMocG9pbnQoeChwKSwgLXkocCkpLCBlbXB0eSkpKVxuKSkgaW5cblxudHJhbnNsYXRlZFN5bW0gPSBwIC0+IGUgLT4gbWFwKHN5bW0obWFwKGUsIHggLT4gLXAgKyB4KSksIHggLT4gcCArIHgpIGluXG5cbnJuZFBvaW50ID0gQHBvaW50KHVuaWZvcm1EaXNjcmV0ZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLCB1bmlmb3JtRGlzY3JldGUoYm90dG9tLCB0b3AsIGdyaWRTaXplKSkgaW5cbiAgXG5sID0gMTAwIGluXG5zdGVwID0gMTAgaW5cbnBzID0gdW5pZm9ybUZyb20oNCwgW3BvaW50KDEsIDApLCBwb2ludCgwLCAxKSwgcG9pbnQoLTEsIDApLCBwb2ludCgwLCAtMSldKSBpblxudnMgPSBmbGF0TWFwKHBzLCBwIC0+IHRha2Uoc3RlcCwgQChwKSkpIGluXG5ldm8gPSBwIC0+ICB0YWtlKGwsIGludGVncmF0ZShwLCB2cykpIGluIFxuICAgICBcbmZsYXRNYXAocm5kUG9pbnQsIHAgLT4gdHJhbnNsYXRlZFN5bW0ocCwgZXZvKHApKSkgICAgICJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjozMDAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzE0MzMzNjA3NTIxMjE1MDMwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InIxID0gMzAwIGluXG53MSA9IC4wMDEgaW5cbnIyID0gMTAwIGluXG53MiA9IC4wMDIgaW5cbnIzID0gMTAwIGluXG53MyA9IDEgaW5cbnI0ID0gMTAgaW5cbnc0ID0gLjAwOCBpblxucjUgPSAxMDAgaW5cbnc1ID0gLjAwOCBpblxuXG5jaXJjbGUgPSByIC0+IHcgLT4gcG9sYXIoY29uc3RhbnQoJHIpLCBpbnRlZ3JhdGUoMCwgY29uc3RhbnQoJHcpKSkgaW5cblxuXG5cbiRjaXJjbGUoJHIxLCAkdzEpICtcbiRjaXJjbGUoJHIyLCAkdzIpICtcbiRjaXJjbGUoJHIzLCAkdzMpICtcbiRjaXJjbGUoJHI0LCAkdzQpICtcbiRjaXJjbGUoJHI1LCAkdzUpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTU1MzE1Njg5Njc2Njc3OTAyMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJsID0gMjAwIGluXG5ncmlkU2l6ZSA9IDIwMCBpblxuXG5zeW1tID0gZSAtPiBmbGF0TWFwKCRlLCBwIC0+IFxuICBjb25zKCRwLCBjb25zKC0kcCwgY29ucyhwb2ludCgteCgkcCksIHkoJHApKSwgY29ucyhwb2ludCh4KCRwKSwgLXkoJHApKSwgZW1wdHkpKSlcbikpIGluXG5cbnRyYW5zbGF0ZWRTeW1tID0gcCAtPiBlIC0+IG1hcCgkc3ltbShtYXAoJGUsIHggLT4gLSRwICsgJHgpKSwgeCAtPiAkcCArICR4KSBpblxuXG5ybmRQb2ludCA9IGNhcnRlc2lhbih1bmlmb3JtRGlzY3JldGUoJGxlZnQsICRyaWdodCwgJGdyaWRTaXplKSwgdW5pZm9ybURpc2NyZXRlKCRib3R0b20sICR0b3AsICRncmlkU2l6ZSkpIGluXG4vL2V2byA9IHAgLT4gdGFrZSgkbCwgaW50ZWdyYXRlKCRwLCBjYXJ0ZXNpYW4odW5pZm9ybSgtJHIsICRyKSwgdW5pZm9ybSgtJHIsICRyKSkpKSBpblxuXG5yID0gMjAgaW5cbnYgPSAuMyBpblxudyA9ICR2IC8gJHIgaW5cblxuYXJjTGVuZ3RoID1mbG9vciguNSAqIFBJIC8gJHcpIGluXG5hcmMgPSBhbmdsZSAtPiB0YWtlKCRhcmNMZW5ndGgsIHBvbGFyKGNvbnN0YW50KCRyICogJHcpLCBpbnRlZ3JhdGUoJGFuZ2xlLCBjb25zdGFudCgkdykpKSkgaW4gIFxuc2VnbWVudExlbmd0aCA9IGZsb29yKCRyIC8gJHYpIGluICBcbnNlZ21lbnQgPSBwIC0+IHRha2UoJHNlZ21lbnRMZW5ndGgsIGNvbnN0YW50KCR2ICogJHApKSBpbiBcbnZzID0gdW5pZm9ybUNob2ljZShcbiAgJGFyYygwKSwgJGFyYyhQSSAvIDIpLCAkYXJjKFBJKSwgJGFyYygzICogUEkgLyAyKSxcbiAgJHNlZ21lbnQocG9pbnQoMSwgMCkpLCAkc2VnbWVudChwb2ludCgwLCAxKSksICRzZWdtZW50KHBvaW50KC0xLCAwKSksICRzZWdtZW50KHBvaW50KDAsIC0xKSlcbikgaW4gXG5cbmV2byA9IHAgLT4gdGFrZShmbG9vcigxICsgJGwgLyAkdiksIGludGVncmF0ZSgkcCwgZmxhdE1hcCgkdnMsIHggLT4gJHgpKSkgaW5cblxuXG5mbGF0TWFwKCRybmRQb2ludCwgcCAtPiAkdHJhbnNsYXRlZFN5bW0oJHAsICRldm8oJHApKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTkwNzExOTcxMjgzODc1NzcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJhID0gLS4wMDAwMDEgaW5cbmsgPSAwLjAxIGluXG5ybmQgPSBjYXJ0ZXNpYW4odW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgdW5pZm9ybSgkYm90dG9tLCAkdG9wKSkgaW5cblxuLy9lcSA9IGNvbnN0YW50KHAgLT4gcG9pbnQoJGsgKnkoJHApLCAtICRoICogeCgkcCleMyArICRoICogeCgkcCkpKSBpblxuXG5zcU5vcm0gPSBwIC0+IHgoJHApXjIgKyB5KCRwKV4yIGluXG5cbnRyYWplY3RvcnkgPSBwIC0+IFxuXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHEgLT4gJGsgKiBwb2ludChcbiAgICAgLXkoJHEpICsgJGEgKiB4KCRxKSAqICRzcU5vcm0oJHEpLFxuICAgICB4KCRxKSArICRhICogeSgkcSkgKiAkc3FOb3JtKCRxKVxuICApKSxcbiAgJHBcbikgaW5cblxuXG5mbGF0TWFwKCRybmQsIHAgLT4gdGFrZSgxMDAsICR0cmFqZWN0b3J5KCRwKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjIwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTF9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTkwNzExOTcxMjgzODc1NzcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJhID0gLS4wMDAwMDEgaW5cbmsgPSAwLjAxIGluXG5ybmQgPSBjYXJ0ZXNpYW4odW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgdW5pZm9ybSgkYm90dG9tLCAkdG9wKSkgaW5cblxuLy9lcSA9IGNvbnN0YW50KHAgLT4gcG9pbnQoJGsgKnkoJHApLCAtICRoICogeCgkcCleMyArICRoICogeCgkcCkpKSBpblxuXG5zcU5vcm0gPSBwIC0+IHgoJHApXjIgKyB5KCRwKV4yIGluXG5cbnRyYWplY3RvcnkgPSBwIC0+IFxuXG5zb2x2ZTEoXG4gIGNvbnN0YW50KHEgLT4gJGsgKiBwb2ludChcbiAgICAgLXkoJHEpICsgJGEgKiB4KCRxKSAqICRzcU5vcm0oJHEpLFxuICAgICB4KCRxKSArICRhICogeSgkcSkgKiAkc3FOb3JtKCRxKVxuICApKSxcbiAgJHBcbikgaW5cblxuXG5mbGF0TWFwKCRybmQsIHAgLT4gdGFrZSgxMDAsICR0cmFqZWN0b3J5KCRwKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjIwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTF9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTkwNzExOTcxMjgzODc1NzcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJhID0gLS4wMDAwMDEgaW5cbmsgPSAwLjAxIGluXG5cbnJuZCA9IHBvbGFyKHVuaWZvcm0oMCwgJHRvcCksIHVuaWZvcm0oMCwgMiAqIFBJKSkgaW5cbnNxTm9ybSA9IHAgLT4geCgkcCleMiArIHkoJHApXjIgaW5cblxudHJhamVjdG9yeSA9IHAgLT4gXG5cbnNvbHZlMShcbiAgY29uc3RhbnQocSAtPiAkayAqIChwb2ludCgteSgkcSksIHgoJHEpKSArICRhICogJHNxTm9ybSgkcSkgKiAkcSkgKSxcbiAgJHBcbikgaW5cblxuXG5mbGF0TWFwKCRybmQsIHAgLT4gdGFrZSgxMDAwLCAkdHJhamVjdG9yeSgkcCkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoyMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjExfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTkwNzExOTcxMjgzODc1NzcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJrID0gMC4wMSBpblxubCA9IDEwMCBpblxuYSA9IC0xIGluXG5iID0gLTIgaW5cbmMgPSAwIGluXG56b29tID0gMSBpblxuXG5ybmQgPSBjYXJ0ZXNpYW4odW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgdW5pZm9ybSgkYm90dG9tLCAkdG9wKSkgaW5cbi8vc3FOb3JtID0gcCAtPiB4KCRwKV4yICsgeSgkcCleMiBpblxuXG4vL3ZlY3RvckZpZWxkID0gcCAtPiAkayAqICRwIGluXG52ZWN0b3JGaWVsZCA9IHogLT4gcCAtPiAkayAqIHBvaW50KHkoJHApLCAkYSAqIHgoJHApICsgJGIgKiB5KCRwKSArICRjICkgaW5cblxudHJhamVjdG9yeSA9IHAgLT4gXG5cbm1hcChzb2x2ZTEoXG4gIGNvbnN0YW50KCR2ZWN0b3JGaWVsZCgkem9vbSkpLFxuICAoMSAvICR6b29tKSAqICRwXG4pLCBwIC0+ICR6b29tICogJHApIGluXG4gXG5cbmZsYXRNYXAoJHJuZCwgcCAtPiB0YWtlKCRsLCAkdHJhamVjdG9yeSgkcCkpKSAifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MjAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMX0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTEwNDE4OTE1MDU4ODM3Njk1MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gLjAzIGluXG5zID0gMTAwIGluXG5nID0gMTAwIGluXG5cbm1pZCA9IHBvaW50KCRnLzIsICRnLzIpIGluXG52ZWN0b3JGaWVsZCA9IHAgLT4gJHIgKiAoLSRtaWQgK3BvaW50KHkoJHApICUgJGcsICgteCgkcCkpICUgJGcpKSBpblxucG9pbnRzID0gPHBvaW50Pih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSBpblxuXG5saW5lID0gcCAtPiBzb2x2ZTEoXG4gIGNvbnN0YW50KCR2ZWN0b3JGaWVsZCksXG4gICRwXG4pIGluXG5cbmZsYXRNYXAoJHBvaW50cywgcCAtPiB0YWtlKCRzLCAkbGluZSgkcCkpKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NzQzNDMwNzU1Mjg0NDQ4NTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6IlxuYSA9IDQ4MjcxIGluIGIgPSAwIGluIG0gPSAyXjMxICstMSBpblxuayA9IDIgLyAkbSBpblxuXG5ncmlkU2l6ZSA9IDEwMCBpblxuXG5ybmQgPSBwcmV2IC0+ICgkYSAqICRwcmV2ICsgJGIpICUgJG0gaW5cbm5vcm1hbGlzZSA9IHByZXYgLT4gMiAqICRybmQoJHByZXYpIC8gJG0gKyAtMSBpbiBcblxuc3BlZWQgPSBwIC0+IHBvaW50KFxuICAkbm9ybWFsaXNlKCRybmQoeCgkcCkgKyAkZ3JpZFNpemUgKiB5KCRwKSkpLFxuICAkbm9ybWFsaXNlKCRybmQoeSgkcCkrICAkZ3JpZFNpemUgKiB4KCRwKSkpXG4pIGluXG5cbnJhbmRvbVBvaW50ID0gPHBvaW50Pih1bmlmb3JtKCRsZWZ0LCAkcmlnaHQpLCB1bmlmb3JtKCRib3R0b20sICR0b3ApKSBpblxuXG5cbmdyaWRQb2ludCA9IHAgLT4gcG9pbnQoXG4gIHRvRGJsKGZsb29yKHgoJHApIC8gJGdyaWRTaXplKSksXG4gIHRvRGJsKGZsb29yKHkoJHApIC8gJGdyaWRTaXplKSlcbikgKyBwb2ludCgkZ3JpZFNpemUsICRncmlkU2l6ZSkgaW5cblxubGluZSA9IHAgLT4gdGFrZSgyMCwgaW50ZWdyYXRlKCRwLCA8JHNwZWVkKCRncmlkUG9pbnQoJHApKT4pKSBpblxuXG5mbGF0TWFwKCRyYW5kb21Qb2ludCwgJGxpbmUpXG5cblxuXG4gXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MzAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTEwNDE4OTE1MDU4ODM3Njk1MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gLjAzIGluXG5zID0gMzAgaW5cbmcgPSAyMDAgaW5cblxuYSA9IDAgaW4gYiA9IDEgaW4gYyA9IC0xIGluIGQgPSAwIGluXG5cbm1pZCA9IHBvaW50KCRnLzIsICRnLzIpIGluXG5cblxuc2luZ2xlVmVjdG9yRmllbGQgPSBwIC0+IHBvaW50KFxuICAkYSAqIHgoJHApICsgJGIgKiB5KCRwKSxcbiAgJGMgKiB4KCRwKSArICRkICogeSgkcClcbikgaW5cblxucG9pbnRTaWduID0gcCAtPiBwb2ludChzaWduKHgoJHApKSwgc2lnbih5KCRwKSkpIGluXG5cbnBvaW50TW9kID0gcCAtPiAtJG1pZCArIHBvaW50KFxuICB4KCRwKSAlICRnLFxuICB5KCRwKSAlICRnXG4pIGluXG5cbnZlY3RvckZpZWxkID0gcCAtPiAkciAqICgkc2luZ2xlVmVjdG9yRmllbGQoJHBvaW50TW9kKCRwKSkpIGluXG5cbnBvaW50cyA9IDxwb2ludD4odW5pZm9ybSgkbGVmdCwgJHJpZ2h0KSwgdW5pZm9ybSgkYm90dG9tLCAkdG9wKSkgaW5cblxubGluZSA9IHAgLT4gc29sdmUxKFxuICBjb25zdGFudCgkdmVjdG9yRmllbGQpLFxuICAkcFxuKSBpblxuXG5mbGF0TWFwKCRwb2ludHMsIHAgLT4gdGFrZSgkcywgJGxpbmUoJHApKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTEwNDE4OTE1MDU4ODM3Njk1MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gLjAxIGluXG5zID0gNjAgaW5cbmcgPSAxNTAgaW5cblxuYSA9IDAgaW4gYiA9IDEgaW4gYyA9IC0xIGluIGQgPSAwIGluXG5cbm1pZCA9IHBvaW50KCRnLzIsICRnLzIpIGluXG5cblxuc2luZ2xlVmVjdG9yRmllbGQgPSBwIC0+IHBvaW50KFxuICAkYSAqIHgoJHApICsgJGIgKiB5KCRwKSxcbiAgJGMgKiB4KCRwKSArICRkICogeSgkcClcbikgaW5cblxucG9pbnRTaWduID0gcCAtPiAoYWJzKHgoJHApKSArIGFicyh5KCRwKSkpICogcG9pbnQoc2lnbih4KCRwKSksIHNpZ24oeSgkcCkpKSBpblxuXG5wb2ludE1vZCA9IHAgLT4gLSRtaWQgKyBwb2ludChcbiAgeCgkcCkgJSAkZyxcbiAgeSgkcCkgJSAkZ1xuKSBpblxuXG52ZWN0b3JGaWVsZCA9IHAgLT4gJHIgKiAoJHNpbmdsZVZlY3RvckZpZWxkKCRwb2ludFNpZ24oJHBvaW50TW9kKCRwKSkpKSBpblxuXG5wb2ludHMgPSA8cG9pbnQ+KHVuaWZvcm0oJGxlZnQsICRyaWdodCksIHVuaWZvcm0oJGJvdHRvbSwgJHRvcCkpIGluXG5cbmxpbmUgPSBwIC0+IHNvbHZlMShcbiAgY29uc3RhbnQoJHZlY3RvckZpZWxkKSxcbiAgJHBcbikgaW5cblxuZmxhdE1hcCgkcG9pbnRzLCBwIC0+IHRha2UoJHMsICRsaW5lKCRwKSkpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MTk0MjExNjI1MDUyNjA3NTk5NiwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6Im4gPSA4IGluXG5yID0gMyBpblxuXG5hID0gMSBpbiBiID0gMSBpbiBjID0gMSBpbiBkID0gMSBpblxuXG5wcyA9IGludGVncmF0ZShwb2ludCgwLCAwKSwgPHBvaW50Pih1bmlmb3JtKC0kciwgJHIpLCB1bmlmb3JtKC0kciwgJHIpKSkgaW5cblxuYW5nbGVzID0gbiAtPiB0YWtlKCRuLCBpbnRlZ3JhdGUoMCwgPDIgKiBQSSAvIHRvRGJsKCRuKT4pKSBpblxuXG5yb3RhdGUgPSBhbmdsZSAtPiBwIC0+IHBvaW50KFxuICB4KCRwKSAqIGNvcygkYW5nbGUpICsteSgkcCkgKiBzaW4oJGFuZ2xlKSxcbiAgeCgkcCkgKiBzaW4oJGFuZ2xlKSArIHkoJHApICogY29zKCRhbmdsZSlcbikgaW5cblxuXG5zeW1tID0gbiAtPiBwIC0+IG1hcCgkYW5nbGVzKCRuKSwgYSAtPiAkcm90YXRlKCRhLCAkcCkpIGluXG5cbi8vZmxhdE1hcCgkcHMsIHAgLT4gWyRwLCAtJHAsICRyb3RhdGUoUEkvMiwgJHApLCAkcm90YXRlKC1QSS8yLCAkcCldKVxuXG5mbGF0TWFwKCRwcywgcCAtPiBtYXAoJGFuZ2xlcygkbiksIGEgLT4gJHJvdGF0ZSgkYSwgJHApKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTcxNDc3MTg4Mjg5MTIyNTc5MjEsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcbmEgPSAtLjEgaW4gYiA9IC0xIGluIGMgPSAxIGluXG5yYnJvd25pYW4gPSAxIGluXG5yZiA9IDEwMCBpblxuZSA9IDEwMDAgaW5cblxuZGlzdCA9IG1hcCh1bmlmb3JtKDAsIDEpLCB4IC0+ICRyZiAqKDIgKiAkeF4kZSArIC0xKSkgaW5cblxubiA9IDxwb2ludD4oJGRpc3QsICRkaXN0KSBpblxuXG5vc2NpbGxhdG9yID0gc29sdmUyKFxuICBtYXAoJG4sIHJuIC0+IHggLT4gdiAtPiAkYSAqICR4ICsgJGIgKiAkdiArICRybiksXG4gIHBvaW50KDAsIDApLFxuICBwb2ludCgwLCAwKVxuKSBpblxuXG5cbmJyb3duaWFuID0gaW50ZWdyYXRlKHBvaW50KDAsIDApLCA8cG9pbnQ+KFxuICB1bmlmb3JtKC0kcmJyb3duaWFuLCAkcmJyb3duaWFuKSxcbiAgdW5pZm9ybSgtJHJicm93bmlhbiwgJHJicm93bmlhbilcbikpIGluXG5cbiRicm93bmlhbiA8Kz4gJG9zY2lsbGF0b3JcblxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMDEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTYyNjMxMzkyMjQzMjc3MDU2MjksImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcbmEgPSAtLjEgaW4gYiA9IC0xIGluIGMgPSAxIGluXG5yYnJvd25pYW4gPSAyIGluXG5yZiA9IDEwMCBpblxubXUgPSAxIGluXG5zaWdtYSA9IDEgaW5cbmsgPSAzIGluXG5cbmFuZ2xlcyA9IG4gLT4gdGFrZSgkbiwgaW50ZWdyYXRlKDAsIDwyICogUEkgLyB0b0RibCgkbik+KSkgaW5cblxucm90YXRlID0gYW5nbGUgLT4gcCAtPiBwb2ludChcbiAgeCgkcCkgKiBjb3MoJGFuZ2xlKSArLXkoJHApICogc2luKCRhbmdsZSksXG4gIHgoJHApICogc2luKCRhbmdsZSkgKyB5KCRwKSAqIGNvcygkYW5nbGUpXG4pIGluXG5cbmRpc3QgPSBub3JtYWwoJG11LCAkc2lnbWEpIGluXG5cbm4gPSA8JGs+IDwqPiA8cG9pbnQ+KCRkaXN0LCAkZGlzdCkgaW5cblxub3NjaWxsYXRvciA9IHNvbHZlMihcbiAgbWFwKCRuLCBybiAtPiB4IC0+IHYgLT4gJGEgKiAkeCArICRiICogJHYgKyAkcm4pLFxuICBwb2ludCgwLCAwKSxcbiAgcG9pbnQoMCwgMClcbikgaW5cblxuXG5icm93bmlhbiA9IGludGVncmF0ZShwb2ludCgwLCAwKSwgPHBvaW50PihcbiAgdW5pZm9ybSgtJHJicm93bmlhbiwgJHJicm93bmlhbiksXG4gIHVuaWZvcm0oLSRyYnJvd25pYW4sICRyYnJvd25pYW4pXG4pKSBpblxuXG5ldm8gPSAkYnJvd25pYW4gPCs+ICRvc2NpbGxhdG9yIGluXG5cbmZsYXRNYXAoJGV2bywgcCAtPiBtYXAoJGFuZ2xlcyg3KSwgYSAtPiAkcm90YXRlKCRhLCAkcCkpKVxuXG5cbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjAxMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgyMTg0ODc4NTI0MTU3Nzc1NTIsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDEwMCBpblxubCA9IDEwIGluXG5cbm5YID0gKCRyaWdodCArLSAkbGVmdCkgLyAkZ3JpZFNpemUgaW5cbm5ZID0gKCR0b3AgKy0gJGJvdHRvbSkgLyAkZ3JpZFNpemUgaW5cbnRvdCA9IGZsb29yKCRuWCAqICRuWSkgaW5cblxuZ3JpZFBvaW50c1ggPSB0YWtlKGZsb29yKCRuWCksIGludGVncmF0ZSgkbGVmdCwgPCRncmlkU2l6ZT4pKSBpblxuZ3JpZFBvaW50c1kgPSB0YWtlKGZsb29yKCRuWSksIGludGVncmF0ZSgkYm90dG9tLCA8JGdyaWRTaXplPikpIGluXG5cbmdyaWRQb2ludHMgPSBmbGF0TWFwKCRncmlkUG9pbnRzWCwgeCAtPiBtYXAoJGdyaWRQb2ludHNZLCB5IC0+IHBvaW50KCR4LCAkeSkpKSBpblxuXG5cblxucm5kUG9pbnRJbkNlbGwgPSA8cG9pbnQ+KHVuaWZvcm0oMCwgJGdyaWRTaXplKSwgdW5pZm9ybSgwLCAkZ3JpZFNpemUpKSBpblxuXG5hbmdsZXMgPSB1bmlmb3JtKDAsIDIgKiBQSSkgaW5cblxudHJhamVjdG9yaWVzRnVuYyA9IHppcFdpdGgoJGdyaWRQb2ludHMsICRhbmdsZXMsIGcgLT4gYSAtPiBwIC0+IGludGVncmF0ZSgkZyArICRwLCA8cG9sYXIoMywgJGEpPikpIGluXG5cbnRyYWplY3RvcmllcyA9IHppcFdpdGgoJHJuZFBvaW50SW5DZWxsLCB1bmlmb3JtRnJvbSgkdG90LCAkdHJhamVjdG9yaWVzRnVuYyksIHAgLT4gZiAtPiAkZigkcCkpIGluXG5cblxuZmxhdE1hcCgkdHJhamVjdG9yaWVzLCB4IC0+IHRha2UoJGwsICR4KSlcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NzMxMzcxMjc1NDI2MDAyODA5LCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoiciA9IC4wMiBpblxudyA9IC4wMSBpblxuXG5yMiA9IC4wMiBpblxuXG5zcGlyYWwgPSBAcG9sYXIoaW50ZWdyYXRlKDAsIEAocikpLCBpbnRlZ3JhdGUoMCwgQCh3KSkpIGluXG5cbnNwZWVkMSA9IG1hcENvbnModW5pZm9ybSgxMDAwLCAzMDAwKSwgbiAtPiBvIC0+IHRha2UoZmxvb3IobiksIG1hcChzcGlyYWwsIHYgLT4gcCAtPiB2IC0gcCkpKSBpblxuXG5zcGVlZDJ2ID0gaW50ZWdyYXRlKHBvaW50KDAsIDApLCBAcG9pbnQodW5pZm9ybSgtcjIsIHIyKSwgdW5pZm9ybSgtcjIsIHIyKSkpIGluXG5cbnNwZWVkMiA9IHRha2UoMTAwMCwgbWFwKHNwZWVkMnYsIHYgLT4gcCAtPiB2KSkgaW5cblxuc3BlZWQgPSBjb25jYXQoc3BlZWQxLCBzcGVlZDIpIGluXG5cbnNvbHZlMShcbiAgc3BlZWQsXG4gIHBvaW50KDAsIDApXG4pXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6OTg5NTg3OTc3NjI3NTQ5MTc1LCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoiciA9IDIgaW5cbncgPSAuMDEgaW5cblxucjIgPSAuMDIgaW5cblxuc3BpcmFsID0gQHBvbGFyKGludGVncmF0ZSgwLCBAKHIpKSwgaW50ZWdyYXRlKDAsIEAodykpKSBpblxuc3BpcmFsQWNjID0gbWFwKGRlcml2ZTIoc3BpcmFsKSwgcCAtPiAoeCAtPiB2IC0+IHAgLSB2KSkgaW5cbnRhbmdlbnRBY2MgPSBAKHggLT4gdiAtPiBwb2ludCgwLCAwKSkgaW5cblxuc3BpcmFsQWNjcyA9IG1hcCh1bmlmb3JtKDEwMDAsIDMwMDApLCBuIC0+IHRha2UoZmxvb3IobiksIHNwaXJhbEFjYykpIGluXG50YW5nZW50QWNjcyA9IG1hcCh1bmlmb3JtKDgwMCwgMTAwMCksIG4gLT4gdGFrZShmbG9vcihuKSwgdGFuZ2VudEFjYykpIGluXG5cbmFjYyA9IGZsYXRNYXAoemlwV2l0aChzcGlyYWxBY2NzLCB0YW5nZW50QWNjcywgeCAtPiB5IC0+IGNvbmNhdCh4LCB5KSksIHogLT4geikgaW5cblxuc29sdmUyKFxuICBhY2MsXG4gIHBvaW50KDAsIDApLFxuICBwb2ludCgwLCAwKVxuKVxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTYyMTU3ODU5MzM2MjMxMDUwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gMiBpblxudyA9IDAuMDEgaW5cblxucjIgPSAuMDIgaW5cbmMgPSA1IGluXG5cblxuc3BpcmFsID0gQHBvbGFyKGludGVncmF0ZSgwLCBAKHIpKSwgaW50ZWdyYXRlKDAsIEAodykpKSBpblxuc3BpcmFsQWNjID0gbWFwKGRlcml2ZTIoc3BpcmFsKSwgcCAtPiAoeCAtPiB2IC0+IHZlcnNvcihwIC0gdikpKSBpblxudGFuZ2VudEFjYyA9IEAoeCAtPiB2IC0+IHBvaW50KDAsIDApKSBpblxuXG5cblxuc3BpcmFsQWNjcyA9IG1hcCh1bmlmb3JtKDMwMDAsIDYwMDApLCBuIC0+IHRha2UoZmxvb3IobiksIHNwaXJhbEFjYykpIGluXG50YW5nZW50QWNjcyA9IG1hcCh1bmlmb3JtKDgwMCwgMTAwMCksIG4gLT4gdGFrZShmbG9vcihuKSwgdGFuZ2VudEFjYykpIGluXG5cbmFjYyA9IGZsYXR0ZW4oemlwV2l0aChzcGlyYWxBY2NzLCB0YW5nZW50QWNjcywgeCAtPiB5IC0+IGNvbmNhdCh4LCB5KSkpIGluXG5cbnNvbHZlMihcbiAgYWNjLFxuICBwb2ludCgwLCAwKSxcbiAgcG9pbnQoMCwgMClcbilcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NTk5ODI1NDE2MjAyMTI0MzAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InIgPSAuMSBpblxudyA9IDAuMDEgaW5cblxucjIgPSAuMDIgaW5cbmMgPSA1IGluXG5cblxuc3BpcmFsID0gQHBvbGFyKGludGVncmF0ZSgwLCBAKHIpKSwgaW50ZWdyYXRlKDAsIEAodykpKSBpblxuXG5yb3RhdGUgPSBwIC0+IHBvaW50KHkocCksIC14KHApKSBpblxuXG5mbGF0dGVuKG1hcFdpdGhEZXJpdmF0aXZlKFxuICB4IC0+IHYgLT4gdGFrZSgxMDAsIGludGVncmF0ZSh4LCBAKDAuMSAqIHJvdGF0ZSh2KSkpKSxcbiAgc3BpcmFsXG4pKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjIyNzM2NTc3OTEzMjE4OTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImsgPSAyIGluXG5zdGVwID0gMSBpblxucmFkaXVzID0gNSBpblxuYW5ndWxhclNwZWVkRmFjdG9yID0gMSBpblxuc3RyYWlnaHRTdGVwTGVuZ3RoID0gMjAgaW5cbm1heFN0cmFpZ2h0U3RlcHMgPSAzMiBpblxuXG5cbmFuZ2xlID0gMyAqIFBJIC8gMiBpblxuXG5cbnJvdGF0ZSA9IHYgLT4gYWxwaGEgLT4gcG9pbnQoeCh2KSAqIGNvcyhhbHBoYSkgLSB5KHYpICogc2luKGFscGhhKSwgeCh2KSAqIHNpbihhbHBoYSkgKyB5KHYpICogY29zKGFscGhhKSkgaW5cblxucm90YXRpb24gPSB2IC0+IG1hcChcbiAgdGFrZSgxICsgZmxvb3IoYW5nbGUgKiByYWRpdXMgLyBhbmd1bGFyU3BlZWRGYWN0b3IpLCBpbnRlZ3JhdGUoMCwgQChhbmd1bGFyU3BlZWRGYWN0b3IgLyByYWRpdXMpKSksXG4gIGEgLT4gYW5ndWxhclNwZWVkRmFjdG9yICogcm90YXRlKHYsIC1hKVxuKSBpblxuXG5zID0gbiAtPiB2IC0+IGNvbmNhdCh0YWtlKGZsb29yKG4pLCBAKHYpKSwgcm90YXRpb24odikpIGluXG5cbnZlcnNvcnMgPSBmbGF0dGVuKEAoW3BvaW50KHN0ZXAsIDApLCBwb2ludCgwLCBzdGVwKSwgcG9pbnQoLXN0ZXAsIDApLCBwb2ludCgwLCAtc3RlcCldKSkgaW5cblxubGVuZ3RocyA9IHVuaWZvcm1Gcm9tKG1heFN0cmFpZ2h0U3RlcHMsIG1hcChpbnRlZ3JhdGUoMywgQCgxKSksIGsgLT4gc3RyYWlnaHRTdGVwTGVuZ3RoICogayArIDIgKiByYWRpdXMpKSBpbiBcblxuc3BlZWQgPSBmbGF0dGVuKHppcFdpdGgobGVuZ3RocywgdmVyc29ycywgcykpIGluXG5cblxuXG5pbnRlZ3JhdGUocG9pbnQoMCwgMCksIHNwZWVkKVxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MiwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6OTYwNTE4ODA3MDU4MDAwNjAwLCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoiXG5cbmsgPSAxMCBpblxuc3RlcCA9IDEgaW5cbnJhZGl1cyA9IDIwIGluXG5hbmd1bGFyU3BlZWRGYWN0b3IgPSAxIGluXG5zdHJhaWdodFN0ZXBMZW5ndGggPSAxMDAgaW5cbm1heFN0cmFpZ2h0U3RlcHMgPSA4IGluXG5udW1iZXJPZlBhcmFsbGVsTGluZXMgPSA0IGluXG5kaXN0YW5jZUJldHdlZW5QYXJhbGxlbExpbmVzID0gMTAgaW5cblxuYW5nbGUgPSAzICogUEkgLyAyIGluXG5cblxucm90YXRlID0gdiAtPiBhbHBoYSAtPiBwb2ludCh4KHYpICogY29zKGFscGhhKSAtIHkodikgKiBzaW4oYWxwaGEpLCB4KHYpICogc2luKGFscGhhKSArIHkodikgKiBjb3MoYWxwaGEpKSBpblxuXG5yb3RhdGlvbiA9IHYgLT4gbWFwKFxuICB0YWtlKDEgKyBmbG9vcihhbmdsZSAqIHJhZGl1cyAvIGFuZ3VsYXJTcGVlZEZhY3RvciksIGludGVncmF0ZSgwLCBAKGFuZ3VsYXJTcGVlZEZhY3RvciAvIHJhZGl1cykpKSxcbiAgYSAtPiBhbmd1bGFyU3BlZWRGYWN0b3IgKiByb3RhdGUodiwgLWEpXG4pIGluXG5cbnMgPSBuIC0+IHYgLT4gY29uY2F0KHRha2UoZmxvb3IobiksIEAodikpLCByb3RhdGlvbih2KSkgaW5cblxudmVyc29ycyA9IGZsYXR0ZW4oQChbcG9pbnQoc3RlcCwgMCksIHBvaW50KDAsIHN0ZXApLCBwb2ludCgtc3RlcCwgMCksIHBvaW50KDAsIC1zdGVwKV0pKSBpblxuXG5sZW5ndGhzID0gdW5pZm9ybUZyb20obWF4U3RyYWlnaHRTdGVwcywgbWFwKGludGVncmF0ZSgzLCBAKDEpKSwgayAtPiBzdHJhaWdodFN0ZXBMZW5ndGggKiBrICsgMiAqIHJhZGl1cykpIGluIFxuXG5zcGVlZCA9IGZsYXR0ZW4oemlwV2l0aChsZW5ndGhzLCB2ZXJzb3JzLCBzKSkgaW5cblxuXG5cbmZsYXR0ZW4obWFwV2l0aERlcml2YXRpdmUoXG4gIHggLT4gdiAtPiB0YWtlKG51bWJlck9mUGFyYWxsZWxMaW5lcywgaW50ZWdyYXRlKHgsIEAoZGlzdGFuY2VCZXR3ZWVuUGFyYWxsZWxMaW5lcyAqcm90YXRlKHZlcnNvcih2KSwgcGkgLyAyKSkpKSxcbiAgaW50ZWdyYXRlKHBvaW50KDAsIDApLCBzcGVlZClcbikpXG5cbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoyLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODc0NzI4NDAxMjQ2NDY1ODAwLCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoiayA9IDIgaW5cbnN0ZXAgPSAxIGluXG5yYWRpdXMgPSA1IGluXG5zcGlyYWxEaXN0YW5jZXMgPSAuMiBpblxubnVtYmVyT2ZSb3RhdGlvbnMgPSAzIGluXG5hbmd1bGFyU3BlZWRGYWN0b3IgPSAuMiBpblxuc3RyYWlnaHRTdGVwTGVuZ3RoID0gNTAgaW5cbm1heFN0cmFpZ2h0U3RlcHMgPSAzMiBpblxuXG5cbmFuZ2xlID0gMyAqIFBJIC8gMiBpblxucm90YXRpb25JdGVyYXRpb25zID0gbnVtYmVyT2ZSb3RhdGlvbnMgKiAoMSArIGZsb29yKGFuZ2xlICogcmFkaXVzIC8gYW5ndWxhclNwZWVkRmFjdG9yKSkgaW5cblxuXG5yb3RhdGUgPSB2IC0+IGFscGhhIC0+IHNwaXJhbERpc3RhbmNlcyAqIGFscGhhICogIHBvaW50KHgodikgKiBjb3MoYWxwaGEpIC0geSh2KSAqIHNpbihhbHBoYSksIHgodikgKiBzaW4oYWxwaGEpICsgeSh2KSAqIGNvcyhhbHBoYSkpIGluXG5cbnJvdGF0aW9uID0gdiAtPiBtYXAoXG4gIHRha2Uocm90YXRpb25JdGVyYXRpb25zLCBpbnRlZ3JhdGUoMCwgQChhbmd1bGFyU3BlZWRGYWN0b3IgLyByYWRpdXMpKSksXG4gIGEgLT4gYW5ndWxhclNwZWVkRmFjdG9yICogcm90YXRlKHYsIC1hKVxuKSBpblxuXG5zID0gbiAtPiB2IC0+IGNvbmNhdCh0YWtlKGZsb29yKG4pLCBAKHYpKSwgcm90YXRpb24odikpIGluXG5cbnZlcnNvcnMgPSBmbGF0dGVuKEAoW3BvaW50KHN0ZXAsIDApLCBwb2ludCgwLCBzdGVwKSwgcG9pbnQoLXN0ZXAsIDApLCBwb2ludCgwLCAtc3RlcCldKSkgaW5cblxubGVuZ3RocyA9IHVuaWZvcm1Gcm9tKG1heFN0cmFpZ2h0U3RlcHMsIG1hcChpbnRlZ3JhdGUoMywgQCgxKSksIGsgLT4gc3RyYWlnaHRTdGVwTGVuZ3RoICogayArIDIgKiByYWRpdXMpKSBpbiBcblxuc3BlZWQgPSBmbGF0dGVuKHppcFdpdGgobGVuZ3RocywgdmVyc29ycywgcykpIGluXG5cblxuXG5pbnRlZ3JhdGUocG9pbnQoMCwgMCksIHNwZWVkKVxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MiwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTQwODE4Nzg2NjI0ODQyNzYwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJ2aXNjb3NpdHkgPSAuMDAxIGluXG5rID0gMCBpblxucmFuZG9tRm9yY2VTdHJlbmd0aCA9IC4xIGluXG5vcnRob2dvbmFsTGluZUxlbmd0aCA9IDUwIGluXG5vcnRob2dvbmFsRmFjdG9yID0gLjMgaW5cblxucmFuZG9tRm9yY2VzID0gQHBvaW50KFxuICB1bmlmb3JtKC1yYW5kb21Gb3JjZVN0cmVuZ3RoLCByYW5kb21Gb3JjZVN0cmVuZ3RoKSxcbiAgdW5pZm9ybSgtcmFuZG9tRm9yY2VTdHJlbmd0aCwgcmFuZG9tRm9yY2VTdHJlbmd0aClcbikgaW5cblxuYWNjZWxlcmF0aW9uID0gciAtPiB4IC0+IHYgLT4gciAtdmlzY29zaXR5ICogdiArIGsgKiB4IGluXG5cbmxpbmUgPSBzb2x2ZTIoXG4gIG1hcChyYW5kb21Gb3JjZXMsIGFjY2VsZXJhdGlvbiksXG4gIHBvaW50KDAsIDApLFxuICBwb2ludCgwLCAwKVxuKSBpblxuXG5mbGF0dGVuKG1hcFdpdGhEZXJpdmF0aXZlKFxuICBwIC0+IHYgLT5cbiAgICByb3RhdGVkID0gb3J0aG9nb25hbEZhY3RvciAqIHBvaW50KHkodiksIC14KHYpKSBpblxuICAgIHN0YXJ0ID0gcCAtICh0b0RibChvcnRob2dvbmFsTGluZUxlbmd0aCkvMikgKiByb3RhdGVkIGluXG4gICAgaW50ZWdyYXRlKHN0YXJ0LCB0YWtlKG9ydGhvZ29uYWxMaW5lTGVuZ3RoLCBAKHJvdGF0ZWQpKSksXG4gIGxpbmVcbikpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJUb3J1c0NhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDc0MzY3NDgwNDQ0NzM3NjAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InJuZFBvaW50ID0gQHBvaW50KHVuaWZvcm0obGVmdCwgcmlnaHQpLCB1bmlmb3JtKGJvdHRvbSwgdG9wKSkgaW5cbmYgPSA2MCBpblxudiA9IDIgaW5cblxubWFwQ29ucyhub2lzZSwgbiAtPiBub3RVc2VkIC0+XG4gIG1hcENvbnModW5pZm9ybSgxLCAyNTYpLCByIC0+IG5vdFVzZWQgLT5cbiAgICBsaW5lID0gcCAtPiBzb2x2ZTEoXG4gICAgICBAKHEgLT4gcG9sYXIodiwgNiAqICgyXi41KSAqIFBJICogbigoMSAvIGYpICogcSkpKSxcbiAgICAgIHBcbiAgICApIGluXG4gICAgZmxhdE1hcChcbiAgICAgIHJuZFBvaW50LFxuICAgICAgcCAtPiB0YWtlKDMwMCwgbGluZShwKSlcbiAgICApXG4gIClcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
            <DT><A HREF="http://eyjkcmf3aw5nu3rhdguionsic2vlzci6lty5njk5odc5njq5odcymjmwmdasimnvbmzpzyi6eyjuyw1lijoizhjhd2luzybkc2wilcjjb25mawcioijybmrqb2ludca9iebwb2ludch1bmlmb3jtkgxlznqsihjpz2h0kswgdw5pzm9ybshib3r0b20sihrvcckpigluxg5vy3rhdmvzid0gmybpblxucgvyc2lzdgvuy2ugpsaunwluxg5szw5ndgggpsaxmdagaw5cbmdyawrtaxplid0gmzawigluxg5hbmdszuzhy3rvcia9idygkiayif4unsbpblxuxg52id0gmibpblxuxg5tyxbdb25zkg9jdgf2zu5vaxnllcbvbiatpibub3rvc2vkic0/" ADD_DATE="1552845910">Perlin Noise with Octaves</A>
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTc3NjQxMTA2ODk3Nzk4MDUwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbmYgPSAxMDAgaW5cbnYgPSAuMSBpblxuXG5tYXBDb25zKG9jdGF2ZU5vaXNlLCBvbiAtPiBub3RVc2VkIC0+XG4gIG4gPSB4IC0+IHkgLT4gb24oMSwgLjIsIHgsIHkpIGluXG4gIG1hcChcbiAgICBpbnRlZ3JhdGUobGVmdCwgQCh2KSksXG4gICAgeCAtPiBwb2ludCh4LCBhICogbih4L2YsIHgvZikpXG4gICkgIFxuKSBcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzIxODk0OTkwMjc0OTUyODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbmYgPSAzMDAgaW5cbnYgPSAxIGluXG5sZW5ndGggPSAzMDAwIGluXG5kID0gMzAgaW5cbnlWYXIgPSAzIGluXG5cbm1hcENvbnMob2N0YXZlTm9pc2UsIG9uIC0+IG5vdFVzZWQgLT5cbiAgbiA9IHggLT4geSAtPiBvbig4LCAuNCwgeCwgeSkgaW5cblxuICBmbGF0TWFwKFxuICAgIHJhbmdlKGJvdHRvbS0xMDAsIHRvcCsxMDAsIGQpLFxuICAgIHN0YXJ0WSAtPiB0YWtlKGxlbmd0aCwgbWFwKFxuICAgICAgaW50ZWdyYXRlKGxlZnQsIEAodikpLFxuICAgICAgeCAtPiBwb2ludCh4LCBzdGFydFkgKyBhICogbih4L2YsIHN0YXJ0WSAvIChmICogeVZhcikpKVxuICAgICkpIFxuICApXG5cbiAgLy9tYXAoXG4gIC8vICBpbnRlZ3JhdGUobGVmdCwgQCh2KSksXG4gIC8vICB4IC0+IHBvaW50KHgsIGEgKiBuKHgvZiwgeC9mKSlcbiAgLy8pICBcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzIxODk0OTkwMjc0OTUyODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbmYgPSAzMDAgaW5cbnYgPSAxIGluXG5sZW5ndGggPSAzMDAwIGluXG5kID0gNSBpblxueVZhciA9IDEgaW5cblxubWFwQ29ucyhvY3RhdmVOb2lzZSwgb24gLT4gbm90VXNlZCAtPlxuICBuID0gb24oOCwgLjQpIGluXG5cbiAgZmxhdE1hcChcbiAgICByYW5nZShib3R0b20gLSAxMDAsIHRvcCArIDEwMCwgZCksXG4gICAgc3RhcnRZIC0+IHRha2UobGVuZ3RoLCBtYXAoXG4gICAgICBpbnRlZ3JhdGUobGVmdCwgQCh2KSksXG4gICAgICB4IC0+IHBvaW50KHgsIHN0YXJ0WSArIGEgKiBuKHBvaW50KHgvZiwgc3RhcnRZIC8gKGYgKiB5VmFyKSkpKVxuICAgICkpIFxuICApXG4pIFxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjUwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTcwNjc2NjY1NjMwNDIzNTAwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcbmYgPSA2MDAgaW5cbnYgPSAyIGluXG5zaXplID0gMTAwIGluXG5yID0gNSBpblxuXG5ybmRQb2ludCA9IGludGVncmF0ZShwb2ludCgwLCAwKSwgQHBvaW50KHVuaWZvcm0oLXIsIHIpLCB1bmlmb3JtKC1yLCByKSkpIGluXG5jb29yZCA9IGQgLT4gdG9EYmwoZmxvb3IoZCAvIHNpemUpKSAqIHNpemUgaW5cbm1vZCA9IHAgLT4gcG9pbnQoY29vcmQoeChwKSksIGNvb3JkKHkocCkpKSBpblxuXG5tYXBDb25zKG5vaXNlLCBuIC0+IG5vdFVzZWQgLT5cbiAgdmVjdG9yRmllbGQgPSBxIC0+IHBvbGFyKHYsIDYgKiAoMl4uNSkgKiBQSSAqIG4oeChtb2QocSkpL2YsIHkobW9kKHEpKS9mKSkgaW5cblxuICAgIGxpbmUgPSBwIC0+IHNvbHZlMShcbiAgICAgIEAodmVjdG9yRmllbGQpLFxuICAgICAgcFxuICAgICkgaW5cbiAgICBmbGF0TWFwKFxuICAgICAgcm5kUG9pbnQsXG4gICAgICBwIC0+IHRha2UoNTAsIGxpbmUocCkpXG4gICAgKVxuICBcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTYzMTY3NzgyMjkyODU2MzM0NjMsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcbmYgPSA2MDAgaW5cbnYgPSAyIGluXG5zaXplID0gMzAgaW5cbnIgPSAxMCBpblxuXG5ybmRQb2ludCA9IGludGVncmF0ZShwb2ludCgwLCAwKSwgQHBvaW50KHVuaWZvcm0oLXIsIHIpLCB1bmlmb3JtKC1yLCByKSkpIGluXG5jb29yZCA9IGQgLT4gdG9EYmwoZmxvb3IoZCAvIHNpemUpKSAqIHNpemUgaW5cbm1vZCA9IHAgLT4gcG9pbnQoY29vcmQoeChwKSksIGNvb3JkKHkocCkpKSBpblxuXG5zeW1tID0gZSAtPiBmbGF0TWFwKGUsIHAgLT4gW3AsIC1wLCBwb2ludCgteChwKSwgeShwKSksIHBvaW50KHgocCksIC15KHApKV0pIGluXG5cbnN5bW0oXG5tYXBDb25zKG5vaXNlLCBuIC0+IG5vdFVzZWQgLT5cbiAgdmVjdG9yRmllbGQgPSBxIC0+IHBvbGFyKHYsIDYgKiAoMl4uNSkgKiBQSSAqIG4oeChtb2QocSkpL2YsIHkobW9kKHEpKS9mKSkgaW5cblxuICAgIGxpbmUgPSBwIC0+IHNvbHZlMShcbiAgICAgIEAodmVjdG9yRmllbGQpLFxuICAgICAgcFxuICAgICkgaW5cbiAgICBmbGF0TWFwKFxuICAgICAgcm5kUG9pbnQsXG4gICAgICBwIC0+IHRha2UoMzAsIGxpbmUocCkpXG4gICAgKVxuIFxuKSApXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MTYwMzcxMjY5OTE2NDU4MTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAtLjIwIGluXG5iID0gLS4zIGluXG5yID0gNjAgaW5cbmFscGhhID0gMTAwIGluXG5cbnJuZCA9IEBwb2xhcihcbiAgbWFwKHVuaWZvcm0oMCwgMSksIGQgLT4gciAqIChkIF4gYWxwaGEpKSxcbiAgdW5pZm9ybSgwLCAyICogcGkpXG4pIGluXG5cbnNvbHZlMihcbiAgbWFwKFxuICAgIHJuZCxcbiAgICBycCAtPiBwIC0+IHYgLT4gYSAqcCArIGIqdiArIHJwXG4gICksXG4gIHBvaW50KDAsIDApLFxuICBwb2ludCgwLCAwKVxuKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxLCJzdHJva2VTaXplIjoxMCwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjp0cnVlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MTU1NjI0Nzk1MDU1NjI5MzgwLCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoicm5kUG9pbnQgPSBAcG9pbnQodW5pZm9ybShsZWZ0LCByaWdodCksIHVuaWZvcm0oYm90dG9tLCB0b3ApKSBpblxuZiA9IDMwMCBpblxuZjIgPSAuMSBpblxudiA9IDIgaW5cbmEgPSAxLzEwMDAgaW5cbmIgPSAxLzEwMDAgaW5cbmMgPSA1IGluXG5rID0gNTAgaW5cblxuXG53aXRoRmlyc3QzKG5vaXNlLCBuMSAtPiBuMiAtPiBuMyAtPlxuICBsaW5lID0gcCAtPiBcbiAgcSA9IHBvaW50KG4xKGYyICogcCksIG4yKGYyICogcCkpIGluXG4gIFxuICBzb2x2ZTEoXG4gICAgQChxIC0+IHBvbGFyKHYsIGsgKiAoMl4uNSkgKiBQSSAqIG4zKCgxL2YpKnEpKSksXG4gICAgICBwXG4gICAgKSBpblxuICBmbGF0TWFwKFxuICAgIHJuZFBvaW50LFxuICAgIHAgLT4gdGFrZSgzMDAsIGxpbmUocCkpXG4gIClcbilcbiAgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDczOTUwNjQ1MDEzMjMyMjMxLCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoiYSA9IC0uMDAwMSBpblxuYiA9IC0xIGluXG5yID0gMTAgaW5cbmFscGhhID0gNDAwIGluXG5wID0gLjAwMDEgaW5cbmJyID0gMyBpblxuXG5yYWRpdXMgPSAgIG1hcCh1bmlmb3JtKDAsIDEpLCBkIC0+IHIgKiAoZCBeIGFscGhhKSkgaW5cbnJhZGl1cyA9IG1hcCh1bmlmb3JtKDAsIDEpLCBkIC0+IGlmKGQgPCBwLCByLCAwKSkgaW5cblxucm5kID0gQHBvbGFyKFxuICByYWRpdXMsXG4gIHVuaWZvcm0oMCwgMiAqIHBpKVxuKSBpblxuXG50dXJib2xlbmNlID0gc29sdmUyKFxuICBtYXAoXG4gICAgcm5kLFxuICAgIHJwIC0+IHAgLT4gdiAtPiBhICpwICsgYip2ICsgcnBcbiAgKSxcbiAgcG9pbnQoMCwgMCksXG4gIHBvaW50KDAsIDApXG4pIGluXG5cbnJvdGF0ZSA9IHAgLT4gcSAtPiBwb2ludChcbiAgeChwKSAqIHgocSkgLSB5KHApICogeShxKSxcbiAgeShwKSAqIHgocSkgKyB4KHApICogeShxKVxuKSBpblxuXG4vL3R1cmJvbGVuY2Vcbi8vQCsgXG5cblxuXG5hYWEgPSBtYXBXaXRoRGVyaXZhdGl2ZShcbiAgcCAtPiB2IC0+IHAyIC0+IHAgKyByb3RhdGUodmVyc29yKHYpLCBwMiksXG4gIGludGVncmF0ZShwb2ludCgwLCAwKSwgQHBvaW50KHVuaWZvcm0oLWJyLCBiciksIHVuaWZvcm0oLWJyLCBicikpKVxuKSBpblxuXG56aXBXaXRoKFxuICBhYWEsXG4gIHR1cmJvbGVuY2UsXG4gIGYgLT4gcDIgLT4gZihwMilcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTg1MzY4Nzg2MDIxNjUxMzIwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6Ilxub2N0YXZlcyA9IDQgaW5cbnBlcnNpc3RlbmNlID0gNSBpblxudiA9IC4wMDAyIGluXG5cbm1hcENvbnMob2N0YXZlTm9pc2UsIG9uIC0+IG5vdFVzZWQgLT5cbiAgICBuID0gb24ob2N0YXZlcywgcGVyc2lzdGVuY2UpIGluXG4gICAgXG4gICAgbWFwKFxuICAgICAgaW50ZWdyYXRlKDAsIEAodikpLFxuICAgICAgdyAtPiBwb2xhcigzMDAgKyAxMDAgKm4ocG9sYXIoMSwgdykpLCB3KVxuICAgIClcbiAgXG4pIFxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MjM0Mzc4MTU2MDk3MzMzNDUwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6Ilxub2N0YXZlcyA9IDQgaW5cbnBlcnNpc3RlbmNlID0gLjEgaW5cbmYgPSA1MCBpblxuayA9IDQwIGluXG53ID0gLjAyIGluXG5yID0gLjIgaW5cblxuZSA9IG1hcENvbnMob2N0YXZlTm9pc2UsIG9uIC0+IG5vdFVzZWQgLT5cbiAgICBuID0gb24ob2N0YXZlcywgcGVyc2lzdGVuY2UpIGluXG4gICAgemlwV2l0aChcbiAgICAgIGludGVncmF0ZSgwLCBAKHIpKSxcbiAgICAgIGludGVncmF0ZSgwLCBAKHcpKSxcbiAgICAgIHIgLT4gdyAtPiBwb2xhcihyICsgayAqIG4oKDEgLyBmKSAqIHBvbGFyKHIsIHcpKSwgdykgIFxuICAgIClcbiAgXG4pIGluXG5cbmludGVncmF0ZShwb2ludCgwLCAwKSwgbWFwKGRlcml2ZShlKSwgdiAtPiB2KSlcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDczOTUwNjQ1MDEzMjMyMjYwLCJjb25maWciOnsibmFtZSI6ImRyYXdpbmcgZHNsIiwiY29uZmlnIjoicCA9IDAuMDEgaW5cbnR1cmJvbGVuY2VTdHJlbmd0aCA9IDEwIGluXG50dXJib2xlbmNlTGVuZ3RoID0gMzAwMCBpblxubm9uVHVyYm9sZW5jZUxlbmd0aCA9IDEwMCBpblxucmFuZG9tV2Fsa1N0ZXAgPSAyIGluXG50dXJib2xlbmNlWCA9IG5vcm1hbCgxLCB0dXJib2xlbmNlU3RyZW5ndGgpIGluXG50dXJib2xlbmNlID0gQHBvaW50KHR1cmJvbGVuY2VYLCB0dXJib2xlbmNlWCkgaW5cblxuZmxhdE1hcChcbiAgdW5pZm9ybSgwLCAxKSxcbiAgZCAtPiBpZiAoXG4gICAgZCA8IHAsXG4gICAgdGFrZSh0dXJib2xlbmNlTGVuZ3RoLCB0dXJib2xlbmNlKSxcbiAgICB0YWtlKG5vblR1cmJvbGVuY2VMZW5ndGgsIEAocG9pbnQoMCwgMCkpKVxuICApXG4pXG5cblxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6dHJ1ZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTY1ODk5Nzk3OTM5MTg1MzIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJcblxuYSA9IDIwMCBpblxuXG5wID0gMC4wMSBpblxudHVyYm9sZW5jZVN0cmVuZ3RoID0gNTAgaW5cbnR1cmJvbGVuY2VMZW5ndGggPSAxMDAwMCBpblxubm9uVHVyYm9sZW5jZUxlbmd0aCA9IDEwMCBpblxucmFuZG9tV2Fsa1N0ZXAgPSAyIGluXG5cbnRpbWUgPSBpbnRlZ3JhdGUoMCwgQCgxKSkgaW5cbmYgPSB4IC0+IHNtb290aHN0ZXAoMCwgdHVyYm9sZW5jZUxlbmd0aC8yLCB4KSBpblxucGhpID0geCAtPiAxIC0gZihhYnMoeCAtIHR1cmJvbGVuY2VMZW5ndGgvMikpIGluXG5zY2FsaW5nRmFjdG9yID0gbWFwKHRpbWUsIHBoaSkgaW5cbnR1cmJvbGVuY2VYID0gc2NhbGluZ0ZhY3RvciBAKiBub3JtYWwoMSwgdHVyYm9sZW5jZVN0cmVuZ3RoKSBpblxudHVyYm9sZW5jZSA9IEBwb2ludCh0dXJib2xlbmNlWCwgdHVyYm9sZW5jZVgpIGluXG5cbmZsYXR0ZW4oQCh0YWtlKGZsb29yKHR1cmJvbGVuY2VMZW5ndGgpLCB0dXJib2xlbmNlKSkpXG5cblxuXG5cblxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6dHJ1ZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6ODIxNTM0OTUwNTU5MDM5ODgwNiwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6IlxuXG5hID0gMjAwIGluXG5cbnAgPSAwLjAxIGluXG50dXJib2xlbmNlU3RyZW5ndGggPSAxMCBpblxudHVyYm9sZW5jZUxlbmd0aCA9IDMwMDAwIGluXG5ub25UdXJib2xlbmNlTGVuZ3RoID0gMTAwIGluXG5yYW5kb21XYWxrU3RlcCA9IDMgaW5cblxuXG5cbnRpbWUgPSBpbnRlZ3JhdGUoMCwgQCgxKSkgaW5cbmYgPSB4IC0+IHNtb290aHN0ZXAoMCwgdHVyYm9sZW5jZUxlbmd0aC8yLCB4KSBpblxucGhpID0geCAtPiAxIC0gZihhYnMoeCAtIHR1cmJvbGVuY2VMZW5ndGgvMikpIGluXG5zY2FsaW5nRmFjdG9yID0gbWFwKHRpbWUsIHBoaSkgaW5cbnR1cmJvbGVuY2VYID0gc2NhbGluZ0ZhY3RvciAqIG5vcm1hbCgxLCB0dXJib2xlbmNlU3RyZW5ndGgpIGluXG50dXJib2xlbmNlID0gQHBvaW50KHR1cmJvbGVuY2VYLCB0dXJib2xlbmNlWCkgaW5cblxucmFuZG9tV2FsayA9IGludGVncmF0ZShcbiAgcG9pbnQoMCwgMCksXG4gIEBwb2ludChcbiAgICB1bmlmb3JtKC1yYW5kb21XYWxrU3RlcCwgcmFuZG9tV2Fsa1N0ZXApLFxuICAgIHVuaWZvcm0oLXJhbmRvbVdhbGtTdGVwLCByYW5kb21XYWxrU3RlcClcbiAgKVxuKSBpblxuXG5wdWxzYXRpbmdUdXJib2xlbmNlID0gZmxhdE1hcChcbiAgdW5pZm9ybSgwLCAxKSxcbiAgZCAtPiBpZiAoXG4gICAgZCA8IHAsXG4gICAgdGFrZShmbG9vcih0dXJib2xlbmNlTGVuZ3RoKSwgdHVyYm9sZW5jZSksXG4gICAgdGFrZShub25UdXJib2xlbmNlTGVuZ3RoLCBAKHBvaW50KDAsIDApKSlcbiAgKVxuKSBpblxuXG5yYW5kb21XYWxrICsgcHVsc2F0aW5nVHVyYm9sZW5jZVxuXG5cblxuXG5cblxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NzU1ODI1MzkxMzY3OTM2MzAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InAgPSAwLjAzIGluXG50dXJib2xlbmNlU3RyZW5ndGggPSAxMCBpblxudHVyYm9sZW5jZUxlbmd0aCA9IDEwMDAwIGluXG5ub25UdXJib2xlbmNlTGVuZ3RoID0gMTAwIGluXG5yYW5kb21XYWxrU3RlcCA9IDIgaW5cbnVwd2FyZEJpYXMgPSAwLjMgaW5cblxuXG5cbnRpbWUgPSBpbnRlZ3JhdGUoMCwgY29uc3QoMSkpIGluXG5mID0geCAtPiBzbW9vdGhzdGVwKDAsIHR1cmJvbGVuY2VMZW5ndGgvMiwgeCkgaW5cbnBoaSA9IHggLT4gMSAtIGYoYWJzKHggLSB0dXJib2xlbmNlTGVuZ3RoLzIpKSBpblxuc2NhbGluZ0ZhY3RvciA9IG1hcCh0aW1lLCBwaGkpIGluXG50dXJib2xlbmNlWCA9IHNjYWxpbmdGYWN0b3IgKiBub3JtYWwoMSwgdHVyYm9sZW5jZVN0cmVuZ3RoKSBpblxuXG5wdWxzYXRpbmdUdXJib2xlbmNlID0gZmxhdE1hcChcbiAgdW5pZm9ybSgwLCAxKSxcbiAgZCAtPiBpZiAoXG4gICAgZCA8IHAsXG4gICAgdGFrZShmbG9vcih0dXJib2xlbmNlTGVuZ3RoKSwgdHVyYm9sZW5jZVgpLFxuICAgIHRha2Uobm9uVHVyYm9sZW5jZUxlbmd0aCwgY29uc3QoMSkpXG4gIClcbikgaW5cblxuZSA9IGludGVncmF0ZShcbiAgcG9pbnQoMCwgYm90dG9tKSxcbiAgcHVsc2F0aW5nVHVyYm9sZW5jZSAqIEBwb2ludChcbiAgICB1bmlmb3JtKC1yYW5kb21XYWxrU3RlcCwgcmFuZG9tV2Fsa1N0ZXApLFxuICAgIHVuaWZvcm0oLXJhbmRvbVdhbGtTdGVwLCByYW5kb21XYWxrU3RlcCArIHVwd2FyZEJpYXMpXG4gIClcbikgaW5cblxuXG5wYXJhbGxlbCh0YWtlKDUwLCBjb25zdChlKSkpXG5cblxuXG5cblxuXG5cblxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDcxNjQzMTU2NDc1MTQ3OTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImsgPSAyIGluXG5zdGVwID0gMSBpblxucmFkaXVzID0gNSBpblxuc3BpcmFsRGlzdGFuY2VzID0gLjIgaW5cbm51bWJlck9mUm90YXRpb25zID0gMjAgaW5cbmFuZ3VsYXJTcGVlZEZhY3RvciA9IC4yIGluXG5zdHJhaWdodFN0ZXBMZW5ndGggPSA1MCBpblxubWF4U3RyYWlnaHRTdGVwcyA9IDMyIGluXG50dXJib2xlbmNlU3RyZW5ndGggPSAzMCBpblxub2N0YXZlcyA9IDQgaW5cbnBlcnNpc3RlbmNlID0gLjMgaW5cblxuZiA9IDEwMCBpblxuXG5cbmFuZ2xlID0gMyAqIFBJIC8gMiBpblxucm90YXRpb25JdGVyYXRpb25zID0gbnVtYmVyT2ZSb3RhdGlvbnMgKiAoMSArIGZsb29yKGFuZ2xlICogcmFkaXVzIC8gYW5ndWxhclNwZWVkRmFjdG9yKSkgaW5cblxuXG5yb3RhdGUgPSB2IC0+IGFscGhhIC0+IHNwaXJhbERpc3RhbmNlcyAqIGFscGhhICogIHBvaW50KHgodikgKiBjb3MoYWxwaGEpIC0geSh2KSAqIHNpbihhbHBoYSksIHgodikgKiBzaW4oYWxwaGEpICsgeSh2KSAqIGNvcyhhbHBoYSkpIGluXG5cbnJvdGF0aW9uID0gdiAtPiBtYXAoXG4gIHRha2Uocm90YXRpb25JdGVyYXRpb25zLCBpbnRlZ3JhdGUoMCwgQChhbmd1bGFyU3BlZWRGYWN0b3IgLyByYWRpdXMpKSksXG4gIGEgLT4gYW5ndWxhclNwZWVkRmFjdG9yICogcm90YXRlKHYsIC1hKVxuKSBpblxuXG5zID0gbiAtPiB2IC0+IGNvbmNhdCh0YWtlKGZsb29yKG4pLCBAKHYpKSwgcm90YXRpb24odikpIGluXG5cbnZlcnNvcnMgPSBmbGF0dGVuKEAoW3BvaW50KHN0ZXAsIDApLCBwb2ludCgwLCBzdGVwKSwgcG9pbnQoLXN0ZXAsIDApLCBwb2ludCgwLCAtc3RlcCldKSkgaW5cblxubGVuZ3RocyA9IHVuaWZvcm1Gcm9tKG1heFN0cmFpZ2h0U3RlcHMsIG1hcChpbnRlZ3JhdGUoMywgQCgxKSksIGsgLT4gc3RyYWlnaHRTdGVwTGVuZ3RoICogayArIDIgKiByYWRpdXMpKSBpbiBcblxuc3BlZWQgPSBmbGF0dGVuKHppcFdpdGgobGVuZ3RocywgdmVyc29ycywgcykpIGluXG5cblxubWFwQ29ucyhtYXAob2N0YXZlTm9pc2UsIG4gLT4gbihvY3RhdmVzLCBwZXJzaXN0ZW5jZSkpLCBuMSAtPiBub2lzZTIgLT5cbiAgbWFwV2l0aERlcml2YXRpdmUoXG4gICAgcCAtPiB2IC0+IHAgKyB0dXJib2xlbmNlU3RyZW5ndGggKiAobjEoKDEvZikgKiBwKS9ub3JtKHYpKSAqIHBvaW50KHkodiksIC14KHYpKSxcbiAgICBpbnRlZ3JhdGUocG9pbnQoMCwgMCksIHNwZWVkKVxuICApXG4pXG5cblxuXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MjAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MjEzODQxNzEzOTUzMDA4MzMwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InRvRWRnZSA9IHAgLT4gaWYgKHgocCkgPCB5KHApLCBwb2ludCgwLCB5KHApKSwgcG9pbnQoeChwKSwgMCkpIGluXG5cbnBvaW50cyA9IEBwb2ludCh1bmlmb3JtKGxlZnQsIHJpZ2h0KSwgdW5pZm9ybSh0b3AsIGJvdHRvbSkpIGluXG5cblxuZ3JpZFNpemUgPSAyMDAgaW5cblxuaW5DZWxsID0gZiAtPiBwIC0+XG4gIHBncmlkID0gcG9pbnQoeChwKSAtIHgocCkgJSBncmlkU2l6ZSwgeShwKSAtIHkocCkgJSBncmlkU2l6ZSkgaW5cbiAgcGZyYWN0ID0gcCAtIHBncmlkIGluXG4gIGYocGZyYWN0KSArIHBncmlkXG5pblxuXG5tYXAoXG4gIHBvaW50cyxcbiAgaW5DZWxsKHRvRWRnZSlcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTI3OTAyNjA0MDY5MTUxNTAzMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDUwIGluXG5cbnRvRWRnZSA9IHAgLT4gW3BvaW50KDAsIHkocCkpLCBwb2ludCh4KHApLCAwKV0gaW5cblxucG9pbnRzID0gQHBvaW50KHVuaWZvcm0obGVmdCwgcmlnaHQpLCB1bmlmb3JtKHRvcCwgYm90dG9tKSkgaW5cblxuXG5pbkNlbGwgPSBmIC0+IHAgLT5cbiAgcEluQ2VsbCA9IHBvaW50KHgocCkgJSBncmlkU2l6ZSwgeShwKSAlIGdyaWRTaXplKSBpblxuICBwQ2VsbCA9IHAgLSBwSW5DZWxsIGluXG4gIG1hcChmKHBJbkNlbGwpLCBwLT4gcCArIHBDZWxsKVxuaW5cblxuZmxhdG1hcChcbiAgcG9pbnRzLFxuICBpbkNlbGwodG9FZGdlKVxuKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTI3OTAyNjA0MDY5MTUxNTAzMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDEwMCBpblxubm9pc2VTdHJlbmd0aCA9IDMwIGluXG5mcmVxID0gMTAwIGluXG5vY3RhdmVzID0gMTAgaW5cbnBlcnNpc3RlbmNlID0gLjIgaW5cbmFuZ2xlcmFuZ2UgPSA5IGluXG5cbnRvRWRnZSA9IHAgLT4gW3BvaW50KDAsIHkocCkpLCBwb2ludCh4KHApLCAwKV0gaW5cblxucG9pbnRzID0gQHBvaW50KHVuaWZvcm0obGVmdCwgcmlnaHQpLCB1bmlmb3JtKHRvcCwgYm90dG9tKSkgaW5cblxuXG5pbkNlbGwgPSBmIC0+IHAgLT5cbiAgcEluQ2VsbCA9IHBvaW50KHgocCkgJSBncmlkU2l6ZSwgeShwKSAlIGdyaWRTaXplKSBpblxuICBwQ2VsbCA9IHAgLSBwSW5DZWxsIGluXG4gIG1hcChmKHBJbkNlbGwpLCBwLT4gcCArIHBDZWxsKVxuaW5cblxuXG5mbGF0TWFwKG9jdGF2ZU5vaXNlLCBvbiAtPlxuICBuID0gb24ob2N0YXZlcywgcGVyc2lzdGVuY2UpIGluXG4gIG1hcChmbGF0bWFwKFxuICAgIHBvaW50cyxcbiAgICBpbkNlbGwodG9FZGdlKVxuICApLCBwIC0+IHAgKyBwb2xhcihub2lzZXN0cmVuZ3RoICogbigoMS8xMCkgKiBwKSwgYW5nbGVyYW5nZSAqIHBpICogbigoMS9mcmVxKSAqIHApKSlcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTg3MzQ1MzE0MzQyMjgyNTgwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkU2l6ZSA9IDEwMCBpblxubm9pc2VTdHJlbmd0aCA9IDEwMCBpblxuZnJlcSA9IDEwMCBpblxuZnJlcTIgPSA1MCBpblxub2N0YXZlcyA9IDEwIGluXG5wZXJzaXN0ZW5jZSA9IC4yIGluXG5hbmdsZXJhbmdlID0gOTAwIGluXG5cbnRvRWRnZSA9IHAgLT4gW3BvaW50KDAsIHkocCkpLCBwb2ludCh4KHApLCAwKV0gaW5cblxucG9pbnRzID0gQHBvaW50KHVuaWZvcm0obGVmdCwgcmlnaHQpLCB1bmlmb3JtKHRvcCwgYm90dG9tKSkgaW5cblxuXG5pbkNlbGwgPSBmIC0+IHAgLT5cbiAgcEluQ2VsbCA9IHBvaW50KHgocCkgJSBncmlkU2l6ZSwgeShwKSAlIGdyaWRTaXplKSBpblxuICBwQ2VsbCA9IHAgLSBwSW5DZWxsIGluXG4gIG1hcChmKHBJbkNlbGwpLCBwLT4gcCArIHBDZWxsKVxuaW5cblxuXG5mbGF0TWFwKG9jdGF2ZU5vaXNlLCBvbiAtPlxuICBuID0gb24ob2N0YXZlcywgcGVyc2lzdGVuY2UpIGluXG4gIG1hcChmbGF0bWFwKFxuICAgIHBvaW50cyxcbiAgICBpbkNlbGwodG9FZGdlKVxuICApLCBwIC0+IHAgKyBwb2xhcihub2lzZXN0cmVuZ3RoICogbigoMS9mcmVxMikgKiBwKSwgYW5nbGVyYW5nZSAqIHBpICogbigoMS9mcmVxKSAqIHApKSlcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTczNDI5OTYzODMwMjQyMjMwMDcsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyYWRpdXMgPSAwLjAwMDAxIGluXG52aXNjb3NpdHkgPSAwLjAxICogcmFkaXVzIGluXG5rID0gcmFkaXVzICogMyBpblxucm5kID0gQHBvaW50KHVuaWZvcm0oLXJhZGl1cywgcmFkaXVzKSwgdW5pZm9ybSgtcmFkaXVzLCByYWRpdXMpKSBpblxuXG52ID0gc29sdmUyKFxuICBtYXAocm5kLCByIC0+IHggLT4gdiAtPiByICsgLXZpc2Nvc2l0eSAqIHYgKyAtayAqIHgpLFxuICBwb2ludCgwLCAwKSxcbiAgcG9pbnQoMCwgMClcbikgaW5cblxuaW50ZWdyYXRlKHBvaW50KDAsIDApLCB2KSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTgxMzUwMDg1MTAxNzM1MjIwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJyID0gMyBpblxubCA9IDEwMCBpblxuZ3JpZFNpemUgPSAxMDAgaW5cblxuc3ltbSA9IGUgLT4gZmxhdE1hcChlLCBwIC0+IFxuICBjb25zKHAsIGNvbnMoLXAsIGNvbnMocG9pbnQoLXgocCksIHkocCkpLCBjb25zKHBvaW50KHgocCksIC15KHApKSwgZW1wdHkpKSlcbikpIGluXG5cbnRyYW5zbGF0ZWRTeW1tID0gcCAtPiBlIC0+IG1hcChzeW1tKG1hcChlLCB4IC0+IC1wICsgeCkpLCB4IC0+IHAgKyB4KSBpblxuXG5ybmRQb2ludCA9IEBwb2ludCh1bmlmb3JtRGlzY3JldGUobGVmdCwgcmlnaHQsIGdyaWRTaXplKSwgdW5pZm9ybURpc2NyZXRlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSkpIGluXG5icm93bmlhbiA9IHAgLT4gdGFrZShsLCBpbnRlZ3JhdGUocCwgQHBvaW50KHVuaWZvcm0oLXIsIHIpLCB1bmlmb3JtKC1yLCByKSkpKSBpblxuXG5mbGF0TWFwKHJuZFBvaW50LCBwIC0+IHRyYW5zbGF0ZWRTeW1tKHAsIGJyb3duaWFuKHApKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IlRvcnVzQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6Njk0MjA1Mzg5NDc3NTgxOTcxNSwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6InJuZFBvaW50ID0gQHBvaW50KHVuaWZvcm0obGVmdCwgcmlnaHQpLCB1bmlmb3JtKGJvdHRvbSwgdG9wKSkgaW5cbmYgPSA2MCBpblxudiA9IDIgaW5cblxud2l0aEZpcnN0KG5vaXNlLCBuIC0+XG4gIHdpdGhGaXJzdCh1bmlmb3JtKDEsIDI1NiksIHIgLT5cbiAgICBsaW5lID0gcCAtPiBzb2x2ZTEoXG4gICAgICBAKHEgLT4gcG9sYXIodiwgNiAqICgyXi41KSAqIFBJICogbigoMSAvIGYpICogcSkpKSxcbiAgICAgIHBcbiAgICApIGluXG4gICAgZmxhdE1hcChcbiAgICAgIHJuZFBvaW50LFxuICAgICAgcCAtPiB0YWtlKDMwMCwgbGluZShwKSlcbiAgICApXG4gIClcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTc3NjQxMTA2ODk3Nzk4MDUwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbmYgPSAxMDAgaW5cbnYgPSAuMSBpblxuXG5tYXBDb25zKG9jdGF2ZU5vaXNlLCBvbiAtPiBub3RVc2VkIC0+XG4gIG4gPSB4IC0+IHkgLT4gb24oMSwgLjIsIHBvaW50KHgsIHkpKSBpblxuICBtYXAoXG4gICAgaW50ZWdyYXRlKGxlZnQsIEAodikpLFxuICAgIHggLT4gcG9pbnQoeCwgYSAqIG4oeC9mLCB4L2YpKVxuICApICBcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzIxODk0OTkwMjc0OTUyODAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbmYgPSAzMDAgaW5cbnYgPSAxIGluXG5sZW5ndGggPSAzMDAwIGluXG5kID0gMzAgaW5cbnlWYXIgPSAzIGluXG5cbm1hcENvbnMob2N0YXZlTm9pc2UsIG9uIC0+IG5vdFVzZWQgLT5cbiAgbiA9IHggLT4geSAtPiBvbig4LCAuNCwgcG9pbnQoeCwgeSkpIGluXG5cbiAgZmxhdE1hcChcbiAgICByYW5nZShib3R0b20tMTAwLCB0b3ArMTAwLCBkKSxcbiAgICBzdGFydFkgLT4gdGFrZShsZW5ndGgsIG1hcChcbiAgICAgIGludGVncmF0ZShsZWZ0LCBAKHYpKSxcbiAgICAgIHggLT4gcG9pbnQoeCwgc3RhcnRZICsgYSAqIG4oeC9mLCBzdGFydFkgLyAoZiAqIHlWYXIpKSlcbiAgICApKSBcbiAgKVxuXG4gIC8vbWFwKFxuICAvLyAgaW50ZWdyYXRlKGxlZnQsIEAodikpLFxuICAvLyAgeCAtPiBwb2ludCh4LCBhICogbih4L2YsIHgvZikpXG4gIC8vKSAgXG4pIFxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTYwODA3OTIxMzIzNTcxNjIwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImdyaWQgPSBncmlkU2l6ZSAtPiBAcG9pbnQoXG4gIHVuaWZvcm1EaXNjcmV0ZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICB1bmlmb3JtRGlzY3JldGUoYm90dG9tLCB0b3AsIGdyaWRTaXplKVxuKSBpblxuXG5ncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIGZsYXR0ZW4oemlwV2l0aChcbiAgICBwb2ludHMsXG4gICAgZHJhd2luZ3MsXG4gICAgcCAtPiBkcmF3aW5nIC0+IHRha2UobGVuZ3RoLCBtYXAoZHJhd2luZywgcSAtPiBxICsgcCkpXG4gICkpXG5pblxuXG5jaXJjbGUgPSByIC0+IHcgLT5cbiAgQHBvbGFyKEAociksIGludGVncmF0ZSgwLCBAKHcpKSlcbmluXG5cbncxcyA9IHVuaWZvcm1EaXNjcmV0ZSgzLCA3LCAxKSBpblxudzJzID0gdW5pZm9ybURpc2NyZXRlKC01LCAtMiwgMSkgaW5cbnJzID0gdW5pZm9ybURpc2NyZXRlKDEwLCAzMCwgMSkgaW5cblxubWFpbkNpcmNsZXMgPSBrIC0+IG1hcCh3MXMsIHcgLT4gY2lyY2xlKDEwLCBrICogdykpIGluXG5zZWNvbmRhcnlDaXJjbGVzID0gayAtPnppcFdpdGgoXG4gIHcycyxcbiAgcnMsXG4gIHcgLT4gciAtPiBjaXJjbGUociwgayAqIHcpXG4pIGluXG5cbmNpcmNsZXMgPSBrIC0+XG4gIHppcFdpdGgoXG4gICAgbWFpbkNpcmNsZXMoayksXG4gICAgc2Vjb25kYXJ5Q2lyY2xlcyhrKSxcbiAgICBjMSAtPiBjMiAtPiBjMSBAKyBjMlxuICApXG5pblxuXG5cblxuLy9vblBvaW50cyhncmlkKDEwMCksIGNpcmNsZXMpXG5cbmsgPSAuMDMgaW5cbmxlbmd0aCA9IDIwIGluXG5cbm9uUG9pbnRzKGdyaWQoODApLCBjaXJjbGVzKGspLCBmbG9vcihsZW5ndGggLyBrKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjU2ODkzMzMyNzc2NDM0MjAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImdyaWQgPSBncmlkU2l6ZSAtPiBAcG9pbnQoXG4gIHVuaWZvcm1EaXNjcmV0ZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICB1bmlmb3JtRGlzY3JldGUoYm90dG9tLCB0b3AsIGdyaWRTaXplKVxuKSBpblxuXG5ncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIGZsYXR0ZW4oemlwV2l0aChcbiAgICBwb2ludHMsXG4gICAgZHJhd2luZ3MsXG4gICAgcCAtPiBkcmF3aW5nIC0+IHRha2UobGVuZ3RoLCBtYXAoZHJhd2luZywgcSAtPiBxICsgcCkpXG4gICkpXG5pblxuXG5jaXJjbGUgPSByIC0+IHcgLT5cbiAgQHBvbGFyKEAociksIGludGVncmF0ZSgwLCBAKHcpKSlcbmluXG5cbncxcyA9IHVuaWZvcm1EaXNjcmV0ZSgzLCAxMDAsIDIxKSBpblxudzJzID0gdW5pZm9ybURpc2NyZXRlKC0xMDAsIDEwMCwgMykgaW5cbnczcyA9IHVuaWZvcm1EaXNjcmV0ZSgtMTAwLCAxMDAsIDUpIGluXG5ycyA9IHVuaWZvcm1EaXNjcmV0ZSgxMCwgMzAsIDEpIGluXG5yM3MgPSB1bmlmb3JtRGlzY3JldGUoMSwgNTAsIDEpIGluXG5cbm1haW5DaXJjbGVzID0gayAtPiBtYXAodzFzLCB3IC0+IGNpcmNsZSgxMCwgayAqIHcpKSBpblxuXG5zZWNvbmRhcnlDaXJjbGVzID0gayAtPnppcFdpdGgoXG4gIHcycyxcbiAgcnMsXG4gIHcgLT4gciAtPiBjaXJjbGUociwgayAqIHcpXG4pIGluXG5cbnRoaXJkQ2lyY2xlcyA9IGsgLT4gemlwV2l0aChcbiAgdzNzLFxuICByM3MsXG4gIHcgLT4gciAtPiBjaXJjbGUociwgayAqIHcpXG4pIGluXG5cbmNpcmNsZXMgPSBrIC0+XG4gIHppcFdpdGgoXG4gICAgemlwV2l0aChcbiAgICAgIG1haW5DaXJjbGVzKGspLFxuICAgICAgc2Vjb25kYXJ5Q2lyY2xlcyhrKSxcbiAgICAgIGMxIC0+IGMyIC0+IGMxIEArIGMyXG4gICAgKSxcbiAgICB0aGlyZENpcmNsZXMoayksXG4gICAgYzEyIC0+IGMzIC0+IGMxMiBAKyBjM1xuKVxuaW5cblxuXG5cbi8vb25Qb2ludHMoZ3JpZCgxMDApLCBjaXJjbGVzKVxuXG5rID0gLjAxIGluXG5sZW5ndGggPSAyMCBpblxuXG5vblBvaW50cyhncmlkKDE1MCksIGNpcmNsZXMoayksIGZsb29yKGxlbmd0aCAvIGspKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MjQ0NDg0NDcyMDkxNjQxMDQwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImdyaWQgPSBncmlkU2l6ZSAtPiBAcG9pbnQoXG4gIHVuaWZvcm1EaXNjcmV0ZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICB1bmlmb3JtRGlzY3JldGUoYm90dG9tLCB0b3AsIGdyaWRTaXplKVxuKSBpblxuXG5ncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIGZsYXR0ZW4oemlwV2l0aChcbiAgICBwb2ludHMsXG4gICAgZHJhd2luZ3MsXG4gICAgcCAtPiBkcmF3aW5nIC0+IHRha2UobGVuZ3RoLCBtYXAoZHJhd2luZywgcSAtPiBxICsgcCkpXG4gICkpXG5pblxuXG5jaXJjbGUgPSByIC0+IHcgLT5cbiAgQHBvbGFyKEAociksIGludGVncmF0ZSgwLCBAKHcpKSlcbmluXG5cbncxcyA9IHVuaWZvcm1EaXNjcmV0ZSgzLCAxMDAsIDIpIGluXG53MnMgPSB1bmlmb3JtRGlzY3JldGUoLTEwLCAxMCwgMSkgaW5cbnczcyA9IHVuaWZvcm1EaXNjcmV0ZSgtMTAsIDEwLCAxKSBpblxucnMgPSB1bmlmb3JtRGlzY3JldGUoMTAsIDMwLCAxKSBpblxucjNzID0gdW5pZm9ybURpc2NyZXRlKDEsIDUwLCAxKSBpblxuXG5tYWluQ2lyY2xlcyA9IGsgLT4gbWFwKHcxcywgdyAtPiBjaXJjbGUoMTAsIGsgKiB3KSkgaW5cblxuc2Vjb25kYXJ5Q2lyY2xlcyA9IGsgLT56aXBXaXRoKFxuICB3MnMsXG4gIHJzLFxuICB3IC0+IHIgLT4gY2lyY2xlKHIsIGsgKiB3KVxuKSBpblxuXG50aGlyZENpcmNsZXMgPSBrIC0+IHppcFdpdGgoXG4gIHczcyxcbiAgcjNzLFxuICB3IC0+IHIgLT4gY2lyY2xlKHIsIGsgKiB3KVxuKSBpblxuXG5jaXJjbGVzID0gayAtPlxuICB6aXBXaXRoKFxuICAgIHppcFdpdGgoXG4gICAgICBtYWluQ2lyY2xlcyhrKSxcbiAgICAgIHNlY29uZGFyeUNpcmNsZXMoayksXG4gICAgICBjMSAtPiBjMiAtPiBjMSBAKyBjMlxuICAgICksXG4gICAgdGhpcmRDaXJjbGVzKGspLFxuICAgIGMxMiAtPiBjMyAtPiBjMTIgQCsgYzNcbilcbmluXG5cblxuXG4vL29uUG9pbnRzKGdyaWQoMTAwKSwgY2lyY2xlcylcblxuayA9IC4wMSBpblxubGVuZ3RoID0gMjAgaW5cblxub25Qb2ludHMoZ3JpZCgxNTApLCBjaXJjbGVzKGspLCBmbG9vcihsZW5ndGggLyBrKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTI1NDcwNjgxMTg0NDA4NTAxNjQsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkID0gZ3JpZFNpemUgLT4gQHBvaW50KFxuICB1bmlmb3JtRGlzY3JldGUobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgdW5pZm9ybURpc2NyZXRlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSlcbikgaW5cblxuZ3JpZCA9IGdyaWRTaXplIC0+IGZsYXRNYXAoXG4gIHJhbmdlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSksXG4gIHkgLT4gbWFwKFxuICAgIHJhbmdlKGxlZnQsIHJpZ2h0LCBncmlkU2l6ZSksXG4gICAgeCAtPiBwb2ludCh4LCB5KVxuICApXG4pIGluXG5cbm9uUG9pbnRzID0gcG9pbnRzIC0+IGRyYXdpbmdzIC0+IGxlbmd0aCAtPlxuICBmbGF0dGVuKHppcFdpdGgoXG4gICAgcG9pbnRzLFxuICAgIGRyYXdpbmdzLFxuICAgIHAgLT4gZHJhd2luZyAtPiB0YWtlKGxlbmd0aCwgbWFwKGRyYXdpbmcsIHEgLT4gcSArIHApKVxuICApKVxuaW5cblxuY2lyY2xlID0gYWxwaGEgLT4gciAtPiB3IC0+XG4gIEBwb2xhcihAKHIpLCBpbnRlZ3JhdGUoYWxwaGEsIEAodykpKVxuaW5cblxudzFzID0gdW5pZm9ybURpc2NyZXRlKC0zLCAzLCAxKSBpblxudzJzID0gdW5pZm9ybURpc2NyZXRlKC0zMCwgMzAsIDEpIGluXG53M3MgPSB1bmlmb3JtRGlzY3JldGUoLTMwLCAzMCwgMSkgaW5cbnc0cyA9IHVuaWZvcm1EaXNjcmV0ZSgtMzAsIDMwLCAxKSBpblxudzVzID0gdW5pZm9ybURpc2NyZXRlKC0zLCAzLCAxKSBpblxuXG5yMXMgPSB1bmlmb3JtRGlzY3JldGUoMTAsIDUwLCAxKSBpblxucjJzID0gdW5pZm9ybURpc2NyZXRlKDEwLCAyNSwgMSkgaW5cbnIzcyA9IHVuaWZvcm1EaXNjcmV0ZSg1LCAxMCwgMSkgaW5cbnI0cyA9IHVuaWZvcm1EaXNjcmV0ZSgyLCA1LCAxKSBpblxucjVzID0gdW5pZm9ybURpc2NyZXRlKDEsIDIsIDEpIGluXG5cblxuY2lyY2xlcyA9IGsgLT5cblxuICB6aXBXaXRoKFxuICAgIHVuaWZvcm0oMCwgMiAqIHBpKSxcbiAgICB3MXMsXG4gICAgdzJzLFxuICAgIHczcyxcbiAgICB3NHMsXG4gICAgdzVzLFxuICAgIHIxcyxcbiAgICByMnMsXG4gICAgcjNzLFxuICAgIHI0cyxcbiAgICByNXMsXG4gICAgYWxwaGEgLT4gdzEgLT4gdzIgLT4gdzMgLT4gdzQgLT4gdzUgLT4gcjEgLT4gcjIgLT4gcjMgLT4gcjQgLT4gcjUgLT5cbiAgICAgIGNpcmNsZShhbHBoYSwgcjEsIGsgKiB3MSkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjIsIGsgKiB3MikgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjMsIGsgKiB3MykgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjQsIGsgKiB3NCkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjQsIGsgKiB3NSlcbiAgKVxuXG5pblxuXG5cbmsgPSAuMDEgaW5cbmxlbmd0aCA9IDIwIGluXG5cbm9uUG9pbnRzKGdyaWQoMTUwKSwgY2lyY2xlcyhrKSwgZmxvb3IobGVuZ3RoIC8gaykpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTI1NDcwNjgxMTg0NDA4NTAwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkID0gZ3JpZFNpemUgLT4gQHBvaW50KFxuICB1bmlmb3JtRGlzY3JldGUobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgdW5pZm9ybURpc2NyZXRlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSlcbikgaW5cblxuZ3JpZCA9IGdyaWRTaXplIC0+IGZsYXRNYXAoXG4gIHJhbmdlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSksXG4gIHkgLT4gbWFwKFxuICAgIHJhbmdlKGxlZnQsIHJpZ2h0LCBncmlkU2l6ZSksXG4gICAgeCAtPiBwb2ludCh4LCB5KVxuICApXG4pIGluXG5cbm9uUG9pbnRzID0gcG9pbnRzIC0+IGRyYXdpbmdzIC0+IGxlbmd0aCAtPlxuICBmbGF0dGVuKHppcFdpdGgoXG4gICAgcG9pbnRzLFxuICAgIGRyYXdpbmdzLFxuICAgIHAgLT4gZHJhd2luZyAtPiB0YWtlKGxlbmd0aCwgbWFwKGRyYXdpbmcsIHEgLT4gcSArIHApKVxuICApKVxuaW5cblxuY2lyY2xlID0gYWxwaGEgLT4gciAtPiB3IC0+XG4gIEBwb2xhcihAKHIpLCBpbnRlZ3JhdGUoYWxwaGEsIEAodykpKVxuaW5cblxudzFzID0gdW5pZm9ybURpc2NyZXRlKC0zLCAzLCAxKSBpblxudzJzID0gdW5pZm9ybURpc2NyZXRlKC0zMCwgMzAsIDIpIGluXG53M3MgPSB1bmlmb3JtRGlzY3JldGUoLTMwLCAyMDAsIDEwKSBpblxudzRzID0gdW5pZm9ybURpc2NyZXRlKC0yMDAsIDMwLCAyMSkgaW5cbnc1cyA9IHVuaWZvcm1EaXNjcmV0ZSgtMzAsIDMwLCA1KSBpblxuXG5yMXMgPSB1bmlmb3JtRGlzY3JldGUoMTAsIDUwLCAxKSBpblxucjJzID0gdW5pZm9ybURpc2NyZXRlKDEwLCAyNSwgMSkgaW5cbnIzcyA9IHVuaWZvcm1EaXNjcmV0ZSg1LCAxMCwgMSkgaW5cbnI0cyA9IHVuaWZvcm1EaXNjcmV0ZSgyLCA1LCAxKSBpblxucjVzID0gdW5pZm9ybURpc2NyZXRlKDEsIDIsIDEpIGluXG5cblxuY2lyY2xlcyA9IGsgLT5cblxuICB6aXBXaXRoKFxuICAgIHVuaWZvcm0oMCwgMiAqIHBpKSxcbiAgICB3MXMsXG4gICAgdzJzLFxuICAgIHczcyxcbiAgICB3NHMsXG4gICAgdzVzLFxuICAgIHIxcyxcbiAgICByMnMsXG4gICAgcjNzLFxuICAgIHI0cyxcbiAgICByNXMsXG4gICAgYWxwaGEgLT4gdzEgLT4gdzIgLT4gdzMgLT4gdzQgLT4gdzUgLT4gcjEgLT4gcjIgLT4gcjMgLT4gcjQgLT4gcjUgLT5cbiAgICAgIGNpcmNsZShhbHBoYSwgcjEsIGsgKiB3MSkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjIsIGsgKiB3MikgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjMsIGsgKiB3MykgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjQsIGsgKiB3NCkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjQsIGsgKiB3NSlcbiAgKVxuXG5pblxuXG5cbmsgPSAuMDEgaW5cbmxlbmd0aCA9IDIwIGluXG5cbm9uUG9pbnRzKGdyaWQoMTUwKSwgY2lyY2xlcyhrKSwgZmxvb3IobGVuZ3RoIC8gaykpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjQ1MzEwODY4NTMwNzM3ODYzMywiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImdyaWQgPSBncmlkU2l6ZSAtPiBmbGF0TWFwKFxuICByYW5nZShib3R0b20sIHRvcCwgZ3JpZFNpemUpLFxuICB5IC0+IG1hcChcbiAgICByYW5nZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICAgIHggLT4gcG9pbnQoeCwgeSlcbiAgKVxuKSBpblxuXG5vblBvaW50cyA9IHBvaW50cyAtPiBkcmF3aW5ncyAtPiBsZW5ndGggLT5cbiAgZmxhdHRlbih6aXBXaXRoKFxuICAgIHBvaW50cyxcbiAgICBkcmF3aW5ncyxcbiAgICBwIC0+IGRyYXdpbmcgLT4gdGFrZShsZW5ndGgsIG1hcChkcmF3aW5nLCBxIC0+IHEgKyBwKSlcbiAgKSlcbmluXG5cbmNpcmNsZSA9IGFscGhhIC0+IHIgLT4gdyAtPlxuICBAcG9sYXIoQChyKSwgaW50ZWdyYXRlKGFscGhhLCBAKHcpKSlcbmluXG5cbncxcyA9IHVuaWZvcm1EaXNjcmV0ZSgtMywgMywgMSkgaW5cbncycyA9IHVuaWZvcm1EaXNjcmV0ZSgtMzAsIDMwLCAyKSBpblxudzNzID0gdW5pZm9ybURpc2NyZXRlKC0zMCwgMjAwLCAxMCkgaW5cbnc0cyA9IHVuaWZvcm1EaXNjcmV0ZSgtMjAwLCAzMCwgMjEpIGluXG53NXMgPSB1bmlmb3JtRGlzY3JldGUoLTMwLCAzMCwgNSkgaW5cbnc2cyA9IHVuaWZvcm1EaXNjcmV0ZSgtNSwgNSwgMSkgaW5cblxucjFzID0gdW5pZm9ybURpc2NyZXRlKDEsIDUwLCAuMSkgaW5cbnIycyA9IHVuaWZvcm1EaXNjcmV0ZSgxLCAxMCwgLjEpIGluXG5yM3MgPSB1bmlmb3JtRGlzY3JldGUoMSwgMzAsIC4xKSBpblxucjRzID0gdW5pZm9ybURpc2NyZXRlKDEsIDMwLCAuMSkgaW5cbnI1cyA9IHVuaWZvcm1EaXNjcmV0ZSgxLCAxMCwgLjEpIGluXG5yNnMgPSB1bmlmb3JtRGlzY3JldGUoNCwgNTAsIDEpIGluXG5cbnIgPSA1MCBpblxuXG5jaXJjbGVzID0gayAtPlxuXG4gIHppcFdpdGgoXG4gICAgdW5pZm9ybSgwLCAyICogcGkpLFxuICAgIHcxcyxcbiAgICB3MnMsXG4gICAgdzNzLFxuICAgIHc0cyxcbiAgICB3NXMsXG4gICAgdzZzLFxuICAgIHIxcyxcbiAgICByMnMsXG4gICAgcjNzLFxuICAgIHI0cyxcbiAgICByNXMsXG4gICAgcjZzLFxuICAgIGFscGhhIC0+IHcxIC0+IHcyIC0+IHczIC0+IHc0IC0+IHc1IC0+IHc2IC0+IHIxIC0+IHIyIC0+IHIzIC0+IHI0IC0+IHI1IC0+IHI2IC0+XG4gICAgICBzdW0gPSByMSArIHIyICsgcjMgKyByNCArIHI1ICsgcjYgaW5cbiAgICAgIFxuICAgICAgY2lyY2xlKGFscGhhLCByMSAqIHIgLyBzdW0sIGsgKiB3MSkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjIgKiByIC8gc3VtLCBrICogdzIpIEArXG4gICAgICBjaXJjbGUoYWxwaGEsIHIzICogciAvIHN1bSwgayAqIHczKSBAK1xuICAgICAgY2lyY2xlKGFscGhhLCByNCAqIHIgLyBzdW0sIGsgKiB3NCkgQCtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjUgKiByIC8gc3VtLCBrICogdzUpIEArXG4gICAgICBjaXJjbGUoYWxwaGEsIHI2ICogciAvIHN1bSwgayAqIHc2KVxuICApXG5cbmluXG5cblxuayA9IC4wMSBpblxubGVuZ3RoID0gMjAgaW5cblxub25Qb2ludHMoZ3JpZCgxNTApLCBjaXJjbGVzKGspLCBmbG9vcihsZW5ndGggLyBrKSkifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTMxOTgxNjcwMDkzODIzNjcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJhID0gMzAwIGluXG54RnJlcSA9IDUwMCBpblxub2N0YXZlcyA9IDE2IGluXG5wZXJzaXN0ZW5jZSA9IC41IGluXG52ID0gMiBpblxubGVuZ3RoID0gZmxvb3IoKHJpZ2h0IC0gbGVmdCkgLyB2KSBpblxuZCA9IDIgaW5cbm1pblkgPSBib3R0b20gLSAxMDAgaW5cblxubWFwQ29ucyhvY3RhdmVOb2lzZSwgb24gLT4gbm90VXNlZCAtPlxuICBuID0gb24ob2N0YXZlcywgcGVyc2lzdGVuY2UpIGluXG5cbiAgZmxhdE1hcChcbiAgICByYW5nZShtaW5ZLCAxMDAwLCBkKSxcbiAgICBzdGFydFkgLT5cbiAgICAgIGt4ID0gLjAwMSAqIChzdGFydFkgLSBtaW5ZKSBpblxuICAgICAga3kgPSAxIC8gKDEgKyAwLjAwMSAqIChzdGFydFkgLSBtaW5ZKzUwKSkgaW5cbiAgICAgIHRha2UobGVuZ3RoLCBtYXAoXG4gICAgICAgIGludGVncmF0ZShsZWZ0LCBAKHYpKSxcbiAgICAgICAgeCAtPiBwb2ludCggeCwga3kgKiAoc3RhcnRZICsgYSAqIG4ocG9pbnQoa3ggKiB4L3hGcmVxLCBzdGFydFkgLyB4RnJlcSkpKSlcbiAgICAgICkpIFxuICApXG4pIFxuIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjUwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NDI3MjE2MDc5NDEyOTkwMDUwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbnhGcmVxID0gMzAwIGluXG5vY3RhdmVzID0gMyBpblxucGVyc2lzdGVuY2UgPSAuNiBpblxudiA9IDIgaW5cbmxlbmd0aCA9IGZsb29yKChyaWdodCAtIGxlZnQpIC8gdikgaW5cbmQgPSAyIGluXG5taW5ZID0gYm90dG9tIC0gMTAwIGluXG5zID0gMzAwIGluIC8vIGRpc3RhbmNlIG9mIHRoZSBzY3JlZW5cbm9mZnNldFogPSA2MDAgaW4gLy8gaGVpZ2h0IG9mIHRoZSBjYW1lcmFcbm5vaXNlU3RyZW5ndGggPSAxMDAgaW4gLy8gbm9pc2UgYW1wbGl0dWRlXG5tYXhEZXB0aCA9IDEwMDAgaW5cbmRlcHRoU3RlcCA9IDUgaW5cblxuZnogPSBtYXAob2N0YXZlTm9pc2UsIG9uIC0+XG4gIHggLT4geSAtPiAtb2Zmc2V0WiArIG5vaXNlU3RyZW5ndGggKiBvbihvY3RhdmVzLCBwZXJzaXN0ZW5jZSwgcG9pbnQoeC94RnJlcSwgeS94RnJlcSkpXG4pIGluXG5cblxud2l0aEZpcnN0KGZ6LCBmIC0+XG4gIGZsYXRNYXAoXG4gICAgcmFuZ2UoMCwgbWF4RGVwdGgsIGRlcHRoU3RlcCksXG4gICAgeSAtPlxuICAgICAgdGFrZSgyICogbGVuZ3RoLCBtYXAoXG4gICAgICAgIGludGVncmF0ZSgtdG9EYmwobGVuZ3RoKSAqIGQsIEAodikpLFxuICAgICAgICB4IC0+IHBvaW50KHMgKiB4IC8geSwgcyAqIGYoeCwgeSkgLyB5KVxuICAgICAgKSkgXG4gIClcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6NTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6NjA4ODM4OTIxNTA5MDgxNTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbnhGcmVxID0gMzAwIGluXG5vY3RhdmVzID0gOCBpblxucGVyc2lzdGVuY2UgPSAuMiBpblxudiA9IDIgaW5cbmxlbmd0aCA9IGZsb29yKChyaWdodCAtIGxlZnQpIC8gdikgaW5cbnMgPSAzMDAgaW4gLy8gZGlzdGFuY2Ugb2YgdGhlIHNjcmVlblxuY2FtZXJhWiA9IDEwMDAgaW4gLy8gaGVpZ2h0IG9mIHRoZSBjYW1lcmFcbm9mZnNldFogPSBjYW1lcmFaIC8gMiBpblxubm9pc2VTdHJlbmd0aCA9IDEwMCBpbiAvLyBub2lzZSBhbXBsaXR1ZGVcbm1heERlcHRoID0gMTAwMCBpblxuZGVwdGhTdGVwID0gNSBpblxuc3RhcnRZID0gcy8yIGluXG5cbmZ6ID0gbWFwKG9jdGF2ZU5vaXNlLCBvbiAtPlxuICB4IC0+IHkgLT4gLWNhbWVyYVogKyBub2lzZVN0cmVuZ3RoICogb24ob2N0YXZlcywgcGVyc2lzdGVuY2UsIHBvaW50KHgveEZyZXEsIHkvMTAwKSlcbikgaW5cblxuXG53aXRoRmlyc3QoZnosIGYgLT5cbiAgZmxhdE1hcChcbiAgICByYW5nZShzdGFydFksIG1heERlcHRoLCBkZXB0aFN0ZXApLFxuICAgIHkgLT5cbiAgICAgIHhsZW5ndGggPSAoeS9zdGFydFkpICogMiAqIHRvRGJsKGxlbmd0aCkgLyB2IGluXG4gICAgICB0YWtlKFxuICAgICAgICBmbG9vcih4bGVuZ3RoKSxcbiAgICAgICAgbWFwKFxuICAgICAgICAgIGludGVncmF0ZSgteGxlbmd0aCwgQCh2KSksXG4gICAgICAgICAgeCAtPiBwb2ludChzICogeCAvIHksIG9mZnNldFogKyBzICogZih4LCB5KSAvIHkpXG4gICAgICAgIClcbiAgICAgICkgXG4gIClcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6NTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MTgxMTA2MDc4NzAxNDE5OTEzMiwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbnhGcmVxID0gMzAwIGluXG5vY3RhdmVzID0gOCBpblxucGVyc2lzdGVuY2UgPSAuMiBpblxudiA9IDIgaW5cbmxlbmd0aCA9IGZsb29yKChyaWdodCAtIGxlZnQpIC8gdikgaW5cbnMgPSAzMDAgaW4gLy8gZGlzdGFuY2Ugb2YgdGhlIHNjcmVlblxuY2FtZXJhWiA9IDEwMDAgaW4gLy8gaGVpZ2h0IG9mIHRoZSBjYW1lcmFcbm9mZnNldFogPSBjYW1lcmFaIC8gMiBpblxubm9pc2VTdHJlbmd0aCA9IDEwMCBpbiAvLyBub2lzZSBhbXBsaXR1ZGVcbm1heERlcHRoID0gMTAwMCBpblxuZGVwdGhTdGVwID0gMyBpblxuc3RhcnRZID0gcy8yIGluXG5cbmZ6ID0gd2l0aEZpcnN0MihvY3RhdmVOb2lzZSwgb24xIC0+IG9uMiAtPlxuICBAKHggLT4geSAtPlxuICAgIC1jYW1lcmFaICsgbm9pc2VTdHJlbmd0aFxuICAgICAqIG9uMShvY3RhdmVzLCBwZXJzaXN0ZW5jZSwgcG9pbnQoeC94RnJlcSwgMTAqIG9uMigxNiwgLjQsIHBvaW50KHgvNDAwLCB5LzIwMCkpKSlcbiAgKVxuKSBpblxuXG5cbndpdGhGaXJzdChmeiwgZiAtPlxuICBmbGF0TWFwKFxuICAgIHJhbmdlKHN0YXJ0WSwgbWF4RGVwdGgsIGRlcHRoU3RlcCksXG4gICAgeSAtPlxuICAgICAgeGxlbmd0aCA9ICh5L3N0YXJ0WSkgKiAyICogdG9EYmwobGVuZ3RoKSAvIHYgaW5cbiAgICAgIHRha2UoXG4gICAgICAgIGZsb29yKHhsZW5ndGgpLFxuICAgICAgICBtYXAoXG4gICAgICAgICAgaW50ZWdyYXRlKC14bGVuZ3RoLCBAKHYpKSxcbiAgICAgICAgICB4IC0+IHBvaW50KHMgKiB4IC8geSwgb2Zmc2V0WiArIHMgKiBmKHgsIHkpIC8geSlcbiAgICAgICAgKVxuICAgICAgKSBcbiAgKVxuKSBcbiJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjo1MDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MzI1MDA4NjEyNTUyNzI3NzYwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImEgPSAzMDAgaW5cbnhGcmVxID0gMTAwIGluXG5vY3RhdmVzID0gOCBpblxucGVyc2lzdGVuY2UgPSAuMiBpblxudiA9IDIgaW5cbmxlbmd0aCA9IGZsb29yKChyaWdodCAtIGxlZnQpIC8gdikgaW5cbnMgPSAzMDAgaW4gLy8gZGlzdGFuY2Ugb2YgdGhlIHNjcmVlblxuY2FtZXJhWiA9IDEwMDAgaW4gLy8gaGVpZ2h0IG9mIHRoZSBjYW1lcmFcbm9mZnNldFogPSBjYW1lcmFaIC8gMiBpblxubm9pc2VTdHJlbmd0aCA9IDEwMCBpbiAvLyBub2lzZSBhbXBsaXR1ZGVcbm1heERlcHRoID0gMTAwMCBpblxuZGVwdGhTdGVwID0gMyBpblxuc3RhcnRZID0gcy8yIGluXG5cbmZ6ID0gd2l0aEZpcnN0MihvY3RhdmVOb2lzZSwgb24xIC0+IG9uMiAtPlxuICBAKHggLT4geSAtPlxuICAgIC1jYW1lcmFaICtcbiAgICBub2lzZVN0cmVuZ3RoICogb24xKG9jdGF2ZXMsIHBlcnNpc3RlbmNlLCBwb2ludCh4L3hGcmVxLCB5L3hGcmVxKSkgK1xuICAgIDcwMCAqIG9uMigxLCAuNSwgcG9pbnQoeC8xMDAwLCB5LzUwMCkpXG4gIClcbikgaW5cblxuXG53aXRoRmlyc3QoZnosIGYgLT5cbiAgZmxhdE1hcChcbiAgICByYW5nZShzdGFydFksIG1heERlcHRoLCBkZXB0aFN0ZXApLFxuICAgIHkgLT5cbiAgICAgIHhsZW5ndGggPSAoeS9zdGFydFkpICogMiAqIHRvRGJsKGxlbmd0aCkgLyB2IGluXG4gICAgICB0YWtlKFxuICAgICAgICBmbG9vcih4bGVuZ3RoKSxcbiAgICAgICAgbWFwKFxuICAgICAgICAgIGludGVncmF0ZSgteGxlbmd0aCwgQCh2KSksXG4gICAgICAgICAgeCAtPiBwb2ludChzICogeCAvIHksIG9mZnNldFogKyBzICogZih4LCB5KSAvIHkpXG4gICAgICAgIClcbiAgICAgICkgXG4gIClcbikgXG4ifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6NTAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjpmYWxzZSwib3BhY2l0eSI6MC4xMn0sIm9mZkNhbnZhc1NldHRpbmdzIjp7IkluZmluaXRlQ2FudmFzIjp7fX19fQ==
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTIwMzY3OTI1MjcxOTU5NjU0MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJnID0gMTAwIGluXG5rID0gLjAxIGluXG5maWVsZCA9IHggLT4gdiAtPiAtKGcvbm9ybSh4KV4yKSAqIHZlcnNvcih4KSBpblxuXG5cblxuXG5wYXJhbGxlbCh0YWtlKDEwMDAsXG5cbnppcFdpdGgoXG4gIEBwb2ludCh1bmlmb3JtKGxlZnQsIHJpZ2h0KSwgdW5pZm9ybShib3R0b20sIHRvcCkpLFxuICB1bmlmb3JtKDAsIDIgKiBwaSksXG4gIHVuaWZvcm0oMCwgMSksXG4gIHAgLT4gYWxwaGEgLT4gciAtPlxuICAgIHNvbHZlMihcbiAgICAgIEAoZmllbGQpLFxuICAgICAgcCxcbiAgICAgIHBvbGFyKHIgKiBrICogbm9ybShwKSwgYWxwaGEpXG4gICAgKVxuKVxuXG4pKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwMCwic3Ryb2tlU2l6ZSI6MSwicmVzb2x1dGlvbkZhY3RvciI6MiwidHJhaWwiOnsiYWN0aXZlIjp0cnVlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTIwOTc2MzI2MDg5OTQ0OTg4MDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkID0gZ3JpZFNpemUgLT4gQHBvaW50KFxuICB1bmlmb3JtRGlzY3JldGUobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgdW5pZm9ybURpc2NyZXRlKGJvdHRvbSwgdG9wLCBncmlkU2l6ZSlcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIGZsYXR0ZW4oemlwV2l0aChcbiAgICBwb2ludHMsXG4gICAgZHJhd2luZ3MsXG4gICAgcCAtPiBkcmF3aW5nIC0+IHRha2UobGVuZ3RoLCBtYXAoZHJhd2luZywgcSAtPiBxICsgcCkpXG4gICkpXG5pblxuXG5jaXJjbGUgPSByIC0+IHcgLT5cbiAgQHBvbGFyKEAociksIGludGVncmF0ZSgwLCBAKHcpKSlcbmluXG5cbncxcyA9IHVuaWZvcm1EaXNjcmV0ZSguMSwgLjIsIC4wMSkgaW5cbncycyA9IHVuaWZvcm1EaXNjcmV0ZSguMSwgMiwgLjEpIGluXG5cbmNpcmNsZXMgPSBcbiAgemlwV2l0aCh3MXMsIHcycywgdzEgLT4gdzIgLT5cbiAgICBjaXJjbGUoMjAsIHcxKSBAKyBjaXJjbGUoMjAsIHcyKVxuICApXG5pblxuXG5cblxuLy9vblBvaW50cyhncmlkKDEwMCksIGNpcmNsZXMpXG5cbm9uUG9pbnRzKGdyaWQoMTAwKSwgY2lyY2xlcywgNDAwKSJ9fSwicmVuZGVyZXJTdGF0ZSI6eyJpdGVyYXRpb25zIjoxMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiVG9ydXNDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTMxMjAxMzU3MjgzODczMTgwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIHBhcmFsbGVsKHppcFdpdGgoXG4gICAgcG9pbnRzLFxuICAgIGRyYXdpbmdzLFxuICAgIHAgLT4gZHJhd2luZyAtPiB0YWtlKGxlbmd0aCwgbWFwKGRyYXdpbmcsIHEgLT4gcSArIHApKVxuICApKVxuaW5cblxuY2lyY2xlID0gYWxwaGEgLT4gciAtPiB3IC0+XG4gIEBwb2xhcihjb25zdChyKSwgaW50ZWdyYXRlKGFscGhhLCBjb25zdCh3KSkpXG5pblxuXG53MXMgPSB1bmlmb3JtRGlzY3JldGUoLTMwMCwgMzAwLCAxKSBpblxudzJzID0gdW5pZm9ybURpc2NyZXRlKC0zLCAzLCAxKSBpblxudzNzID0gdW5pZm9ybURpc2NyZXRlKDMwLCA1MCwgMTApIGluXG53NHMgPSB1bmlmb3JtRGlzY3JldGUoLTIwLCAxLCAyMSkgaW5cbnc1cyA9IHVuaWZvcm1EaXNjcmV0ZSgtMTAsIDEwLCA1KSBpblxuXG5yMXMgPSB1bmlmb3JtRGlzY3JldGUoMSwgMTAsIC4xKSBpblxucjJzID0gdW5pZm9ybURpc2NyZXRlKDEsIDEwLCAuMSkgaW5cbnIzcyA9IHVuaWZvcm1EaXNjcmV0ZSgxLCAxMCwgLjEpIGluXG5yNHMgPSB1bmlmb3JtRGlzY3JldGUoMSwgMTAsIC4xKSBpblxucjVzID0gdW5pZm9ybURpc2NyZXRlKDEsIDEwLCAuMSkgaW5cblxuciA9IDI1IGluXG5cbmNpcmNsZXMgPSBrIC0+XG5cbiAgemlwV2l0aChcbiAgICB1bmlmb3JtKDAsIDIgKiBwaSksXG4gICAgdzFzLFxuICAgIHcycyxcbiAgICB3MnMsXG4gICAgdzJzLFxuICAgIHcycyxcbiAgICByMXMsXG4gICAgcjJzLFxuICAgIHIycyxcbiAgICByMnMsXG4gICAgcjJzLFxuICAgIGFscGhhIC0+IHcxIC0+IHcyIC0+IHczIC0+IHc0IC0+IHc1IC0+IHIxIC0+IHIyIC0+IHIzIC0+IHI0IC0+IHI1IC0+XG4gICAgICBzdW0gPSByMSArIHIyICsgcjMgKyByNCArIHI1IGluXG4gICAgICBcbiAgICAgIGNpcmNsZShhbHBoYSwgcjEgKiByIC8gc3VtLCBrICogdzEpICtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjIgKiByIC8gc3VtLCBrICogdzIpICtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjMgKiByIC8gc3VtLCBrICogdzMpICtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjQgKiByIC8gc3VtLCBrICogdzQpICtcbiAgICAgIGNpcmNsZShhbHBoYSwgcjUgKiByIC8gc3VtLCBrICogdzUpXG4gIClcblxuaW5cblxuXG5rID0gLjAzIGluXG5sZW5ndGggPSAxMCBpblxuXG5vblBvaW50cyhncmlkKDQwKSwgY2lyY2xlcyhrKSwgZmxvb3IobGVuZ3RoIC8gaykpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAwLCJzdHJva2VTaXplIjoxLCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6MTQzNTgxNDUyNzA4NDA3NTAwMCwiY29uZmlnIjp7Im5hbWUiOiJkcmF3aW5nIGRzbCIsImNvbmZpZyI6ImdyaWQgPSBncmlkU2l6ZSAtPiBAcG9pbnQoXG4gIHVuaWZvcm1EaXNjcmV0ZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICB1bmlmb3JtRGlzY3JldGUoYm90dG9tLCB0b3AsIGdyaWRTaXplKVxuKSBpblxuXG5ncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxub25Qb2ludHMgPSBwb2ludHMgLT4gZHJhd2luZ3MgLT4gbGVuZ3RoIC0+XG4gIHBhcmFsbGVsKHppcFdpdGgoXG4gICAgcG9pbnRzLFxuICAgIGRyYXdpbmdzLFxuICAgIHAgLT4gZHJhd2luZyAtPiB0YWtlKGxlbmd0aCwgbWFwKGRyYXdpbmcsIHEgLT4gcSArIHApKVxuICApKVxuaW5cblxuY2lyY2xlID0gYWxwaGEgLT4gciAtPiB3IC0+XG4gIEBwb2xhcihAKHIpLCBpbnRlZ3JhdGUoYWxwaGEsIEAodykpKVxuaW5cblxudzFzID0gQCgxKSBpblxuXG5yMXMgPSB1bmlmb3JtRGlzY3JldGUoNiwgMjAsIDEpIGluXG5yMnMgPSB1bmlmb3JtRGlzY3JldGUoMSwgNiwgMSkgaW5cbmZhY3RvcnMgPSB1bmlmb3JtRnJvbSgzLCBbLTEsIC0yLCAtM10pIGluXG5cblxuY2lyY2xlcyA9IGsgLT5cblxuICB6aXBXaXRoKFxuICAgIHVuaWZvcm0oMCwgMiAqIHBpKSxcbiAgICB3MXMsXG4gICAgcjFzLFxuICAgIHIycyxcbiAgICBmYWN0b3JzLFxuICAgIGFscGhhIC0+IHcxIC0+IHIxIC0+IHIyIC0+IGZhY3RvciAtPlxuICAgICAgY2lyY2xlKGFscGhhLCByMSwgayAqIHcxKSArXG4gICAgICBjaXJjbGUoYWxwaGEsIHIyLCBrICogKGZhY3RvciAqIHIxIC8gcjIpICogdzEpXG4gIClcblxuaW5cblxuXG5rID0gLjA1IGluXG5sZW5ndGggPSAyMCBpblxuXG5vblBvaW50cyhncmlkKDUwKSwgY2lyY2xlcyhrKSwgZmxvb3IobGVuZ3RoIC8gaykpIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjMwMDAsInN0cm9rZVNpemUiOjEsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTUzNzk2OTQ5NTI4Njk3NjcwMDAsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJzcGVlZCA9IDEgaW5cbmxlbmd0aCA9IDMwIGluXG5ncmlkU2l6ZSA9IDQwIGluXG5ub2lzZVN0cmVuZ3RoID0gMyBpblxuZnJlcSA9IDAuMDAzIGluXG5cbmdyaWQgPSBncmlkU2l6ZSAtPiBmbGF0TWFwKFxuICByYW5nZShib3R0b20sIHRvcCwgZ3JpZFNpemUpLFxuICB5IC0+IG1hcChcbiAgICByYW5nZShsZWZ0LCByaWdodCwgZ3JpZFNpemUpLFxuICAgIHggLT4gcG9pbnQoeCwgeSlcbiAgKVxuKSBpblxuXG52ZWN0b3JGaWVsZHMgPSBtYXAoXG4gIG5vaXNlLFxuICBuIC0+IHAgLT4gcG9sYXIoc3BlZWQsIG5vaXNlU3RyZW5ndGggKiBuKGZyZXEgKiBwKSlcbikgaW5cblxuc2VnbWVudCA9IHYgLT4gcCAtPlxuICB0YWtlKFxuICAgIGxlbmd0aCxcbiAgICBpbnRlZ3JhdGUoLS41ICogbGVuZ3RoICogdiArIHAsIGNvbnN0KHYpKVxuICApXG5pblxuXG5cbndpdGhGaXJzdChcbiAgdmVjdG9yRmllbGRzLFxuICB2ZWN0b3JGaWVsZCAtPlxuICAgIGZsYXRNYXAoXG4gICAgICBncmlkKGdyaWRTaXplKSxcbiAgICAgIHAgLT4gc2VnbWVudCh2ZWN0b3JGaWVsZChwKSwgcClcbiAgICApXG4pIn19LCJyZW5kZXJlclN0YXRlIjp7Iml0ZXJhdGlvbnMiOjEwMDAwLCJzdHJva2VTaXplIjo1LCJyZXNvbHV0aW9uRmFjdG9yIjoyLCJ0cmFpbCI6eyJhY3RpdmUiOmZhbHNlLCJvcGFjaXR5IjowLjEyfSwib2ZmQ2FudmFzU2V0dGluZ3MiOnsiSW5maW5pdGVDYW52YXMiOnt9fX19
eyJkcmF3aW5nU3RhdGUiOnsic2VlZCI6LTYxNzgzMTY0Njk3MDMxNDI3MzEsImNvbmZpZyI6eyJuYW1lIjoiZHJhd2luZyBkc2wiLCJjb25maWciOiJzcGVlZCA9IDEgaW5cbmxlbmd0aCA9IDMwIGluXG5ncmlkU2l6ZSA9IDQwIGluXG5ub2lzZVN0cmVuZ3RoID0gNSBpblxuZnJlcSA9IDEgaW5cbmZyZXEyID0gLjAwMyBpblxuXG5ncmlkID0gZ3JpZFNpemUgLT4gZmxhdE1hcChcbiAgcmFuZ2UoYm90dG9tLCB0b3AsIGdyaWRTaXplKSxcbiAgeSAtPiBtYXAoXG4gICAgcmFuZ2UobGVmdCwgcmlnaHQsIGdyaWRTaXplKSxcbiAgICB4IC0+IHBvaW50KHgsIHkpXG4gIClcbikgaW5cblxudmVjdG9yRmllbGRzID0gd2l0aEZpcnN0MyhcbiAgbm9pc2UsXG4gIG4xIC0+IG4yIC0+IG4zIC0+XG4gICAgY29uc3QocCAtPiBwb2xhcihzcGVlZCwgbm9pc2VTdHJlbmd0aCAqIG4xKGZyZXEgKiBwb2ludChuMihmcmVxMiAqIHApLCBuMyhmcmVxMiAqIHApKSkpKVxuKSBpblxuXG5zZWdtZW50ID0gdiAtPiBwIC0+XG4gIHRha2UoXG4gICAgbGVuZ3RoLFxuICAgIGludGVncmF0ZSgtLjUgKiBsZW5ndGggKiB2ICsgcCwgY29uc3QodikpXG4gIClcbmluXG5cblxud2l0aEZpcnN0KFxuICB2ZWN0b3JGaWVsZHMsXG4gIHZlY3RvckZpZWxkIC0+XG4gICAgZmxhdE1hcChcbiAgICAgIGdyaWQoZ3JpZFNpemUpLFxuICAgICAgcCAtPiBzZWdtZW50KHZlY3RvckZpZWxkKHApLCBwKVxuICAgIClcbikifX0sInJlbmRlcmVyU3RhdGUiOnsiaXRlcmF0aW9ucyI6MTAwMDAsInN0cm9rZVNpemUiOjUsInJlc29sdXRpb25GYWN0b3IiOjIsInRyYWlsIjp7ImFjdGl2ZSI6ZmFsc2UsIm9wYWNpdHkiOjAuMTJ9LCJvZmZDYW52YXNTZXR0aW5ncyI6eyJJbmZpbml0ZUNhbnZhcyI6e319fX0=
